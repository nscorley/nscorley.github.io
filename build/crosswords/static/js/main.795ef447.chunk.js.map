{"version":3,"sources":["components/Header.js","actions/puzzleActions.js","actions/actionTypes.js","components/Square.js","components/Grid.js","components/Content.js","actions/trainerActions.js","utils/firebase.js","actions/dbActions.js","utils/helpers.js","assets/substrings.js","components/ContentContainer.js","components/Main.js","reducers/puzzleReducer.js","reducers/dbReducer.js","reducers/trainerReducer.js","reducers/index.js","components/App.js","utils/configureStore.js","serviceWorker.js","index.js"],"names":["Header","state","isMenuOpen","isSettingsOpen","toggleMenu","_this","setState","toggleSettings","react_default","a","createElement","reactstrap_es","color","dark","expand","href","onClick","this","isOpen","navbar","className","toggle","React","Component","puzzleSetSquare","id","value","type","puzzleSetSquareIsBlack","isBlack","Square","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","target","nextFocus","onKeyDown","keyCode","prevFocus","preventDefault","toggleDoubleActiveEntry","ref","createRef","active","current","focus","_this2","_this$props","setFocused","concat","black","entryIsActive","maxLength","onChange","autoFocus","disabled","autoComplete","connect","_ref","ownProps","puzzle","squares","dispatch","toUpperCase","Grid","currentEntry","puzzleEntries","activeEntryID","currentIndex","squareMap","indexOf","activeSquareID","nextIndex","length","puzzleSetActiveSquareID","isCorrectEntry","correct","forEach","key","i","dbEntries","solution","prevIndex","newID","squareToEntry","includes","puzzleSetActiveEntryID","squareEntries","newEntryID","filter","prevProps","puzzleSetEntry","keys","nextGrid","_this3","squareCounter","toConsumableArray","Array","dimensions","height","map","width","components_Square","Content","puzzleShowEntrySolution","puzzleHideEntrySolution","solutionIsVisible","revealLetter","clue","Grid_Grid","frequency","explanation","rel","addUnseenEntry","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firestore","settings","timestampsInSnapshots","dataRef","collection","dbFetchFail","auth","error","dbPuzzleSetEntry","data","objectSpread","makeHorizontalSquareMap","row","makeVerticalSquareMap","column","randomItem","arr","Math","floor","random","ContentContainer","entry","randomIndex","square","generateGrid","_callee","entrySet","randomLetterIndex","randomLetter","newEntry","secondIntersectIndex","firstMap","secondMap","regenerator_default","wrap","_context","prev","next","unseenEntries","seenEntries","console","log","dbSubEntries","dbQuerySubstring","Promise","all","puzzleSetDimensions","puzzleSetEntryMaps","then","puzzleSetIsGenerating","stop","puzzleClearGrid","removeUnseenEntry","addSeenEntry","nextClue","dbFetchClues","isFetching","isGenerating","Halogenium","components_Content","_ref2","db","trainer","entries","subEntries","limit","arguments","undefined","orderBy","get","snap","doc","catch","entryID","_","resolve","reject","squareID","puzzleMapSquareToEntry","removeSeenEntry","addKnownEntry","removeKnownEntry","sub","where","dbAddSubstringEntry","Main","Header_Header","components_ContentContainer","initialState","puzzleReducer","action","defineProperty","updatedArray","dbReducer","date","Date","dayOfWeek","day_of_week","difficulty","puzzleID","puzzle_id","knownEntries","trainerReducer","item","rootReducer","combineReducers","store","middleware","applyMiddleware","thunk","createStore","composeWithDevTools","configureStore","App","es","components_Main","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.795ef447.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalHeader,\n  Button,\n} from 'reactstrap';\n\nexport default class Header extends React.Component {\n  state = {\n    isMenuOpen: false,\n    isSettingsOpen: false,\n  }\n\n  toggleMenu = () => this.setState({ isMenuOpen: !this.state.isMenuOpen })\n  toggleSettings = () => this.setState({ isSettingsOpen: !this.state.isSettingsOpen })\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\">\n          <NavbarBrand href=\"/\">Crossword Catharsis</NavbarBrand>\n          {/* Crossword Catharsis */}\n          <NavbarToggler onClick={this.toggleMenu} />\n          <Collapse isOpen={this.state.isMenuOpen} navbar>\n            <Nav className=\"ml-auto\" navbar>\n              <NavItem>\n                <NavLink onClick={this.toggleSettings}>About</NavLink>\n              </NavItem>\n            </Nav>\n          </Collapse>\n        </Navbar>\n        <Modal isOpen={this.state.isSettingsOpen} toggle={this.toggleSettings}>\n         <ModalHeader toggle={this.toggleSettings}>About</ModalHeader>\n         <ModalBody>\n          Made by Nate, in less than a day! \n         </ModalBody>\n         <ModalFooter>\n           <Button color=\"primary\" onClick={this.toggleSettings}>Bet</Button>{' '}\n         </ModalFooter>\n       </Modal>\n      </div>\n    );\n  }\n}\n","import {\n  PUZZLE_SET_SQUARE,\n  PUZZLE_SET_ACTIVE_ENTRY_ID,\n  PUZZLE_CLEAR_ENTRIES,\n  PUZZLE_SET_ENTRY,\n  PUZZLE_CLEAR_SQUARES,\n  PUZZLE_SET_ACTIVE_SQUARE_ID,\n  PUZZLE_SET_DIMENSIONS,\n  PUZZLE_SET_SQUARE_IS_BLACK,\n  PUZZLE_MAP_SQUARE_TO_ENTRY,\n  PUZZLE_SET_IS_GENERATING,\n  PUZZLE_CLEAR_ENTRY_MAPS,\n  PUZZLE_SHOW_ENTRY_SOLUTION,\n  PUZZLE_HIDE_ENTRY_SOLUTION,\n} from './actionTypes';\n\n/**\n * Sets the value of a puzzle square\n * @param {int} id\n * @param {String} value\n */\nexport const puzzleSetSquare = (id, value) => (\n  {\n    type: PUZZLE_SET_SQUARE,\n    id,\n    value\n  }\n)\n\nexport const puzzleShowEntrySolution = () => ({ type: PUZZLE_SHOW_ENTRY_SOLUTION })\nexport const puzzleHideEntrySolution = () => ({ type: PUZZLE_HIDE_ENTRY_SOLUTION })\n\nconst puzzleClearEntryMaps = () => ({ type: PUZZLE_CLEAR_ENTRY_MAPS })\n\nconst puzzleClearSquares = () => ({ type: PUZZLE_CLEAR_SQUARES })\n\nconst puzzleClearEntries = () => ({ type: PUZZLE_CLEAR_ENTRIES })\n\nexport const puzzleClearGrid = () => {\n  return (dispatch) => {\n    dispatch(puzzleClearSquares());\n    dispatch(puzzleClearEntries());\n    dispatch(puzzleClearEntryMaps());\n  }\n}\n\nexport const puzzleSetActiveEntryID = (id) => (\n  {\n    type: PUZZLE_SET_ACTIVE_ENTRY_ID,\n    id\n  }\n)\n\nexport const puzzleSetActiveSquareID = (id) => (\n  {\n    type: PUZZLE_SET_ACTIVE_SQUARE_ID,\n    id\n  }\n)\n\nconst puzzleSetSquareIsBlack = (id, isBlack) => (\n  {\n    type: PUZZLE_SET_SQUARE_IS_BLACK,\n    id,\n    isBlack\n  }\n)\n\n/**\n * Appends the entryID to the squareToEntry[squareID] array\n * @param  {int} squareID\n * @param  {int} entryID\n */\nconst puzzleMapSquareToEntry = (squareID, entryID) => (\n  {\n    type: PUZZLE_MAP_SQUARE_TO_ENTRY,\n    squareID,\n    entryID\n  }\n)\n\nexport const puzzleSetDimensions = (width, height) => {\n  return (dispatch) => {\n    // default all squares to isBlack = true\n    [...Array(width * height)].map((_, i) => dispatch(puzzleSetSquareIsBlack(i, true)));\n\n    // set the dimensions\n    return dispatch({\n      type: PUZZLE_SET_DIMENSIONS,\n      width,\n      height\n    })\n  }\n}\n\nexport const puzzleSetEntry = (entryID, squareMap, correct) => ({\n  type: PUZZLE_SET_ENTRY,\n  entryID,\n  squareMap,\n  correct\n})\n\nexport const puzzleSetEntryMaps = (entryID, squareMap) => {\n  return (dispatch) => {\n    squareMap.forEach(squareID => {\n      dispatch(puzzleMapSquareToEntry(squareID, entryID));\n      dispatch(puzzleSetSquareIsBlack(squareID, false));\n    })\n  }\n}\n\nexport const puzzleSetIsGenerating = (isGenerating) => {\n  return dispatch => {\n    return new Promise((resolve, reject) => {\n      dispatch({\n        type: PUZZLE_SET_IS_GENERATING,\n        isGenerating,\n      });\n      resolve()\n    })\n  }\n}\n","/**\n * Puzzle Action Constants\n */\nexport const PUZZLE_SET_SQUARE = 'PUZZLE_SET_SQUARE';\nexport const PUZZLE_SET_ACTIVE_ENTRY_ID = 'PUZZLE_SET_ACTIVE_ENTRY_ID';\nexport const PUZZLE_SET_ENTRY = 'PUZZLE_SET_ENTRY';\nexport const PUZZLE_CLEAR_ENTRIES = 'PUZZLE_CLEAR_ENTRIES';\nexport const PUZZLE_CLEAR_SQUARES = 'PUZZLE_CLEAR_SQUARES';\nexport const PUZZLE_SET_ACTIVE_SQUARE_ID = 'PUZZLE_SET_ACTIVE_SQUARE_ID';\nexport const PUZZLE_SET_DIMENSIONS = 'PUZZLE_SET_DIMENSIONS';\nexport const PUZZLE_SET_SQUARE_IS_BLACK = 'PUZZLE_SET_SQUARE_IS_BLACK';\nexport const PUZZLE_MAP_SQUARE_TO_ENTRY = 'PUZZLE_MAP_SQUARE_TO_ENTRY';\nexport const PUZZLE_SET_IS_GENERATING = 'PUZZLE_SET_IS_GENERATING';\nexport const PUZZLE_CLEAR_ENTRY_MAPS = 'PUZZLE_CLEAR_ENTRY_MAPS';\nexport const PUZZLE_SHOW_ENTRY_SOLUTION = 'PUZZLE_SHOW_ENTRY_SOLUTION';\nexport const PUZZLE_HIDE_ENTRY_SOLUTION = 'PUZZLE_HIDE_ENTRY_SOLUTION';\n\n/**\n * Database Action Constants\n */\nexport const DB_FETCH_ENTRIES = 'DB_FETCH_ENTRIES';\nexport const DB_BEGIN_FETCH = 'DB_BEGIN_FETCH';\nexport const DB_FETCH_SUCCESS = 'DB_FETCH_SUCCESS';\nexport const DB_FETCH_FAIL = 'DB_FETCH_FAIL';\nexport const DB_ADD_ENTRY = 'DB_ADD_ENTRY';\nexport const DB_ADD_SUBSTRING_ENTRY = 'DB_ADD_SUBSTRING_ENTRY'\n\n/**\n * Trainer Action Constants\n */\nexport const ADD_UNSEEN_ENTRY = 'ADD_UNSEEN_ENTRY';\nexport const REMOVE_UNSEEN_ENTRY = 'REMOVE_UNSEEN_ENTRY';\nexport const ADD_SEEN_ENTRY = 'ADD_SEEN_ENTRY';\nexport const REMOVE_SEEN_ENTRY = 'REMOVE_SEEN_ENTRY';\nexport const ADD_KNOWN_ENTRY = '  ADD_KNOWN_ENTRY,';\nexport const REMOVE_KNOWN_ENTRY = 'REMOVE_KNOWN_ENTRY';\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { puzzleSetSquare } from '../actions/puzzleActions';\n\nclass Square extends React.Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if(this.props.active) {\n      this.ref.current.focus();\n    }\n  }\n\n  handleChange = (e) => {\n    this.props.puzzleSetSquare(e.target.value)\n    this.props.nextFocus();\n  }\n\n  onKeyDown = (e) => {\n    switch(e.keyCode) {\n      case 8: { // DELETE\n        this.props.puzzleSetSquare('')\n        this.props.prevFocus();\n        e.preventDefault();\n        break;\n      }\n      case 9: { // TAB\n        this.props.nextFocus();\n        e.preventDefault();\n        break;\n      }\n      case 13: { // ENTER\n        this.props.toggleDoubleActiveEntry()\n        e.preventDefault();\n        break;\n      }\n      // TODO: handle LEFT and RIGHT\n      default: {\n        if(e.target.value !== ''){\n          this.props.nextFocus();\n          e.preventDefault();\n        }\n        break;\n      }\n    }\n  }\n\n  render() {\n    const { value, setFocused, id, active } = this.props;\n    return (\n      <div className={`crossword-square ${this.props.black && 'black'} ${this.props.entryIsActive && 'entry-is-active'}`}>\n        <input\n          type=\"text\"\n          maxLength=\"1\"\n          value={value || ''}\n          ref={this.ref}\n          onKeyDown={this.onKeyDown}\n          onChange={this.handleChange}\n          autoFocus={active}\n          disabled={this.props.black}\n          // TODO: figure out how to fix this for all browsers\n          autoComplete=\"nah\"\n          onClick={() => {\n            if(active) {\n              this.props.toggleDoubleActiveEntry()\n            } else {\n                setFocused(id)\n            }\n          }}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ puzzle }, ownProps) => (\n  { value: puzzle.squares[ownProps.id] }\n)\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  puzzleSetSquare: value => dispatch(puzzleSetSquare(ownProps.id, value.toUpperCase()))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Square);\n","import React from 'react';\nimport Square from './Square'\n\nexport default class Grid extends React.Component {\n  componentDidUpdate(prevProps) {\n    if(prevProps.squares !== this.props.squares) {\n      const currentEntry = this.props.puzzleEntries[this.props.activeEntryID];\n      // Check win condition\n      if(!currentEntry.correct && this.isCorrectEntry()) {\n        // set entry to correct\n        this.props.puzzleSetEntry(this.props.activeEntryID, currentEntry.squareMap, true);\n\n        // check if all other entries are correct\n        let correct = true;\n        Object.keys(this.props.puzzleEntries).forEach(id => {\n          if(id !== this.props.activeEntryID && !this.props.puzzleEntries[id].correct) {\n            correct = false;\n          }\n        })\n\n        // if all correct, go to the new grid\n        if(correct) this.props.nextGrid()\n      } else if(currentEntry.correct && !this.isCorrectEntry()) {\n        this.props.puzzleSetEntry(this.props.activeEntryID, currentEntry.squareMap, false)\n      }\n    }\n  }\n\n  nextFocus = () => {\n    const currentEntry = this.props.puzzleEntries[this.props.activeEntryID];\n    const currentIndex = currentEntry.squareMap.indexOf(this.props.activeSquareID);\n    const nextIndex = currentIndex < currentEntry.squareMap.length - 1 ? currentIndex + 1 : null;\n    nextIndex !== null && this.props.puzzleSetActiveSquareID(currentEntry.squareMap[nextIndex])\n    // TODO: smart focusing, so that it jumps letters as appropriate\n    // TODO: navigate with arrow keys\n    // TODO: highlight instead of cursor (light NYT)\n    // TODO: migrate Square functions here, so Square can be a dumb component\n  }\n\n  isCorrectEntry = () => {\n    let correct = true;\n    const currentEntry = this.props.puzzleEntries[this.props.activeEntryID];\n    currentEntry.squareMap.forEach((key, i) => {\n      if(this.props.squares[key] !== this.props.dbEntries[this.props.activeEntryID].solution[i]){\n        correct = false;\n      }\n    })\n    return correct;\n  }\n\n  prevFocus = () => {\n    const currentEntry = this.props.puzzleEntries[this.props.activeEntryID];\n    const currentIndex = currentEntry.squareMap.indexOf(this.props.activeSquareID);\n    const prevIndex = currentIndex > 0 ? currentIndex - 1 : null;\n    prevIndex !== null && this.props.puzzleSetActiveSquareID(currentEntry.squareMap[prevIndex])\n  }\n\n  setFocused = (newID) => {\n    this.props.activeSquareID !== newID && this.props.puzzleSetActiveSquareID(newID)\n    if(!this.props.squareToEntry[newID].includes(this.props.activeEntryID)) {\n      this.props.puzzleSetActiveEntryID(this.props.squareToEntry[newID][0])\n    }\n  }\n\n  toggleDoubleActiveEntry = () => {\n    const squareEntries = this.props.squareToEntry[this.props.activeSquareID];\n    // if there are multiple entries for the square, toggle\n    if(squareEntries.length > 1) {\n      const newEntryID = squareEntries.filter(e => e !== this.props.activeEntryID)[0];\n      this.props.puzzleSetActiveEntryID(newEntryID);\n    }\n  }\n\n  render() {\n    let squareCounter = 0\n    const row = () => (\n      [...Array(this.props.dimensions.width)].map(() => (\n        <Square\n          key={`square-${squareCounter}`}\n          black={this.props.isBlack[squareCounter]}\n          active={this.props.activeSquareID === squareCounter}\n          nextFocus={this.nextFocus}\n          prevFocus={this.prevFocus}\n          setFocused={this.setFocused}\n          entryIsActive={this.props.puzzleEntries[this.props.activeEntryID].squareMap.includes(squareCounter)}\n          id={squareCounter++}\n          toggleDoubleActiveEntry={this.toggleDoubleActiveEntry}\n        />\n      ))\n    )\n    return (\n      <div className=\"crossword-grid\">\n        {\n          [...Array(this.props.dimensions.height)].map((e, key) => (\n            <div className=\"row\" key={`row-${key}`}>\n              { row() }\n            </div>\n          ))\n        }\n      </div>\n    )\n  }\n}\n","import React from 'react';\nimport { Button, Alert } from 'reactstrap';\nimport Grid from './Grid';\n\nconst Content = ({\n   activeEntryID,\n   nextGrid,\n   activeSquareID,\n   puzzleSetActiveSquareID,\n   puzzleSetActiveEntryID,\n   dimensions,\n   isBlack,\n   squareToEntry,\n   squares,\n   puzzleEntries,\n   dbEntries,\n   puzzleSetEntry,\n   puzzleShowEntrySolution,\n   puzzleHideEntrySolution,\n   solutionIsVisible,\n   revealLetter\n }) => (\n   <div className=\"content\">\n     <h3>{dbEntries[activeEntryID].clue}</h3>\n     <br/>\n     <Grid\n       puzzleEntries={puzzleEntries}\n       dbEntries={dbEntries}\n       activeEntryID={activeEntryID}\n       nextGrid={nextGrid}\n       activeSquareID={activeSquareID}\n       puzzleSetActiveSquareID={puzzleSetActiveSquareID}\n       dimensions={dimensions}\n       isBlack={isBlack}\n       squareToEntry={squareToEntry}\n       puzzleSetActiveEntryID={puzzleSetActiveEntryID}\n       squares={squares}\n       puzzleSetEntry={puzzleSetEntry}\n     />\n     <br/>\n     <div>\n        <Button\n          color=\"secondary\"\n          onClick={solutionIsVisible ? puzzleHideEntrySolution : puzzleShowEntrySolution}\n        >\n          Solution\n        </Button>{' '}\n        <Button color=\"secondary\" onClick={revealLetter}>Reveal a Letter</Button>{' '}\n     </div>\n     <div>\n       <br/>\n       <h5>Frequency: {dbEntries[activeEntryID].frequency}</h5>\n     </div>\n     <br/>\n     {\n       solutionIsVisible && (\n         <Alert color=\"danger\">\n            <b>{dbEntries[activeEntryID].solution}</b><br/>\n            {\n              dbEntries[activeEntryID].explanation !== '-' && (\n              <span>\n                Per&nbsp;\n                <a href=\"https://nyxcrossword.com/\" rel='noopener noreferrer' target=\"_blank\">Bill Butler: </a>\n                { dbEntries[activeEntryID].explanation }\n              </span>\n              )\n            }\n          </Alert>\n       )\n     }\n   </div>\n )\n\nexport default Content;\n","import {\n  ADD_UNSEEN_ENTRY,\n  REMOVE_UNSEEN_ENTRY,\n  ADD_SEEN_ENTRY,\n  REMOVE_SEEN_ENTRY,\n  ADD_KNOWN_ENTRY,\n  REMOVE_KNOWN_ENTRY,\n} from '../actions/actionTypes'\n\nexport const addUnseenEntry = (id) => (\n  {\n    type: ADD_UNSEEN_ENTRY,\n    id,\n  }\n)\n\nexport const removeUnseenEntry = (id) => (\n  {\n    type: REMOVE_UNSEEN_ENTRY,\n    id,\n  }\n)\n\nexport const addSeenEntry = (id) => (\n  {\n    type: ADD_SEEN_ENTRY,\n    id,\n  }\n)\n\nexport const removeSeenEntry = (id) => (\n  {\n    type: REMOVE_SEEN_ENTRY,\n    id,\n  }\n)\n\nexport const addKnownEntry = (id) => (\n  {\n    type: ADD_KNOWN_ENTRY,\n    id,\n  }\n)\n\nexport const removeKnownEntry = (id) => (\n  {\n    type: REMOVE_KNOWN_ENTRY,\n    id,\n  }\n)\n","// TODO: use dotenv or firebase-functions\nimport firebase from 'firebase';\n\n// TODO: use firebase cloud functions to mask API key (firebase-functions)\nconst config = {\n    apiKey: \"AIzaSyCde10omoEZL54Va1XeQoatUbP0kzQ8ycc\",\n    authDomain: \"crossword-coma.firebaseapp.com\",\n    databaseURL: \"https://crossword-coma.firebaseio.com\",\n    projectId: \"crossword-coma\",\n    storageBucket: \"crossword-coma.appspot.com\",\n    messagingSenderId: \"217973495005\"\n};\n\nfirebase.initializeApp(config);\n\n// configurations to ensure forward compatability\nconst firestore = firebase.firestore();\nconst settings = { timestampsInSnapshots: true };\nfirestore.settings(settings);\n\n// ref to clue collection\nexport const dataRef = firestore.collection('data-by-key')\n\n// reference to the authorization features\nexport const firebaseAuth = firebase.auth;\n","import { DB_FETCH_ENTRIES, DB_FETCH_SUCCESS, DB_FETCH_FAIL, DB_ADD_ENTRY, DB_ADD_SUBSTRING_ENTRY } from './actionTypes';\nimport { addUnseenEntry } from './trainerActions';\nimport { dataRef, storageRef } from '../utils/firebase';\n\n\n/**\n * Sets isFetching to true to trigger loaders\n */\nexport const dbBeginFetch = () => (\n  {\n    type: DB_FETCH_ENTRIES,\n  }\n)\n\n\n/**\n * Sets isFetching to false on success\n */\nexport const dbFetchSuccess = () => (\n  {\n    type: DB_FETCH_SUCCESS,\n  }\n)\n\n/**\n * Sets isFetching to fail and error to the specified message\n * @param {String} error\n */\nexport const dbFetchFail = (error) => (\n  {\n    type: DB_FETCH_FAIL,\n    error,\n  }\n)\n\n/**\n * Adds the clue and associated information to the clueData array\n * @param {Object} info\n */\nconst dbPuzzleSetEntry = (id, data) => (\n  {\n    type: DB_ADD_ENTRY,\n    id,\n    ...data,\n  }\n)\n\nconst dbAddSubstringEntry = (id, sub) => (\n  {\n    type: DB_ADD_SUBSTRING_ENTRY,\n    id,\n    sub,\n  }\n)\n\n/**\n * Returns a list of entries with a solution containing the specified substring\n * Ordered by frequency\n * @param  {String} sub\n * @param {int} limit [defaults to 100]\n */\nexport const dbQuerySubstring = (sub, limit = 100) => {\n  return dispatch => {\n    // TODO: maybe do seperate fetching here\n    dispatch(dbBeginFetch());\n    if(sub === undefined) debugger;\n    return dataRef.where(\"substrings\", \"array-contains\", sub.toUpperCase()).orderBy(\"frequency\", \"desc\").limit(limit).get()\n      .then(\n        snap => {\n          // load each document\n          snap.forEach((doc) => {\n            // add the entry to the db\n            dispatch(dbPuzzleSetEntry(doc.id, doc.data()));\n            // store the entry data\n            dispatch(dbAddSubstringEntry(doc.id, sub));\n            // add it to unseen\n            dispatch(addUnseenEntry(doc.id));\n          })\n          // TODO: better to load unknown here?\n          // set isLoading to false\n          dispatch(dbFetchSuccess());\n        }\n      )\n      // handle errors\n      .catch((error) => {\n        console.log(error);\n        dispatch(dbFetchFail(error))\n      })\n  }\n}\n\n\n/**\n * Fetches the given number of random clues\n * @param {int} limit [defaults to 100]\n */\nexport const dbFetchClues = (limit = 200) => {\n  return dispatch => {\n    dispatch(dbBeginFetch());\n    return dataRef.orderBy(\"frequency\", \"desc\").limit(limit).get()\n      .then(\n        snap => {\n          // load each document\n          snap.forEach((doc) => {\n            dispatch(dbPuzzleSetEntry(doc.id, doc.data()));\n            dispatch(addUnseenEntry(doc.id));\n          })\n          // TODO: better to load unknown here?\n          // set isLoading to false\n          dispatch(dbFetchSuccess());\n        }\n      )\n      // handle errors\n      .catch((error) => {\n        console.log(error);\n        dispatch(dbFetchFail(error))\n      })\n  }\n}\n","/**\n * Shuffles an array in-place\n * @param  {Array} a\n */\nexport function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n\nexport function makeHorizontalSquareMap(width, height, length, row) {\n  return[...Array(length).keys()].map((e) => e += row * width);\n}\n\nexport function makeVerticalSquareMap(width, height, length, column) {\n  return [...Array(length).keys()].map((e) => e * width + column);\n}\n\nexport function randomItem(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n","export const substringCounts = {\"E\":2543,\"A\":2273,\"S\":1608,\"O\":1508,\"T\":1402,\"R\":1296,\"N\":1228,\"I\":1160,\"L\":965,\"D\":705,\"C\":566,\"M\":524,\"P\":486,\"H\":486,\"U\":436,\"B\":397,\"G\":330,\"ER\":287,\"AN\":255,\"Y\":254,\"AR\":251,\"EN\":241,\"TE\":239,\"K\":230,\"ES\":224,\"RE\":224,\"AT\":222,\"RA\":209,\"NE\":205,\"ON\":204,\"LE\":199,\"W\":194,\"AL\":189,\"ST\":186,\"SE\":184,\"IN\":184,\"EA\":184,\"AS\":171,\"EL\":159,\"F\":158,\"V\":157,\"TO\":153,\"LA\":152,\"ED\":147,\"ET\":145,\"TA\":142,\"OR\":139,\"DE\":134,\"RO\":129,\"NA\":128,\"MA\":122,\"EE\":118,\"RI\":117,\"AD\":116,\"NO\":114,\"IS\":112,\"LI\":110,\"AC\":109,\"ME\":103,\"OT\":103,\"NT\":102,\"SA\":102,\"AM\":100,\"CA\":97,\"LO\":97,\"HO\":96,\"HE\":95,\"TS\":94,\"IT\":93,\"CO\":88,\"BE\":86,\"HA\":86,\"RS\":85,\"OO\":84,\"PE\":84,\"SH\":83,\"CH\":83,\"PA\":82,\"OL\":82,\"DO\":80,\"OS\":78,\"TI\":78,\"LL\":77,\"IR\":77,\"DI\":77,\"IL\":76,\"VE\":76,\"TH\":75,\"SS\":75,\"IE\":74,\"BA\":74,\"GE\":74,\"TR\":73,\"J\":72,\"NI\":72,\"IA\":71,\"DA\":70,\"SO\":69,\"AB\":68,\"NS\":67,\"CE\":64,\"Z\":64,\"AI\":63,\"SI\":63,\"UT\":62,\"OM\":62,\"TT\":62,\"ND\":62,\"IC\":62,\"X\":61,\"ID\":60,\"KE\":59,\"EM\":59,\"OP\":56,\"AP\":56,\"MO\":55,\"OD\":55,\"AG\":54,\"PO\":54,\"ATE\":53,\"EC\":53,\"MI\":52,\"ONE\":51,\"US\":50,\"RT\":50,\"UR\":50,\"NG\":50,\"HI\":49,\"OU\":48,\"UN\":47,\"OA\":46,\"SP\":46,\"WA\":45,\"TER\":45,\"ERS\":44,\"WE\":43,\"OB\":43,\"BO\":43,\"EAR\":43,\"PI\":42,\"EG\":42,\"KA\":41,\"EI\":40,\"IM\":40,\"EST\":39,\"IO\":39,\"EP\":39,\"DS\":39,\"OI\":38,\"GA\":38,\"LS\":37,\"AV\":37,\"AY\":37,\"YE\":37,\"SC\":36,\"OW\":36,\"ENT\":36,\"GO\":36,\"EW\":34,\"TU\":34,\"AK\":34,\"EO\":33,\"THE\":33,\"IP\":32,\"STA\":32,\"CT\":32,\"BI\":31,\"RU\":31,\"RAT\":31,\"STE\":31,\"NC\":31,\"OE\":31,\"UP\":31,\"CR\":31,\"NN\":30,\"SL\":30,\"VA\":30,\"AU\":30,\"LU\":30,\"RN\":29,\"LT\":29,\"ESS\":29,\"ARE\":29,\"ALE\":29,\"AND\":28,\"REA\":28,\"ALA\":28,\"BR\":28,\"OC\":28,\"FO\":28,\"BL\":28,\"RAN\":28,\"CL\":27,\"AW\":27,\"ARA\":27,\"OG\":27,\"IG\":27,\"ELL\":27,\"TY\":27,\"SN\":27,\"ASE\":27,\"SK\":27,\"GR\":26,\"RD\":26,\"AH\":26,\"CI\":26,\"DR\":26,\"VER\":25,\"TON\":25,\"EV\":25,\"ALL\":25,\"ANA\":25,\"ING\":25,\"EB\":25,\"SU\":25,\"LEN\":25,\"AST\":25,\"ANE\":24,\"ATT\":24,\"RES\":24,\"AGE\":24,\"ANI\":24,\"HER\":24,\"UE\":24,\"INE\":23,\"EAT\":23,\"NES\":23,\"ORE\":23,\"PS\":23,\"MAN\":23,\"EX\":23,\"MS\":23,\"DER\":23,\"OK\":23,\"TES\":23,\"OV\":23,\"AMA\":22,\"TEN\":22,\"ACH\":22,\"TRI\":22,\"ANT\":22,\"DEN\":22,\"CK\":22,\"RM\":22,\"VI\":22,\"ENE\":22,\"LD\":22,\"TC\":21,\"ART\":21,\"SEN\":21,\"LAN\":21,\"AF\":21,\"AVE\":21,\"ALI\":21,\"WI\":21,\"RED\":21,\"LY\":21,\"EAS\":21,\"EU\":21,\"KI\":21,\"IV\":20,\"ZE\":20,\"PAR\":20,\"TEA\":20,\"PL\":20,\"IDE\":20,\"IB\":20,\"UD\":20,\"HU\":20,\"TTE\":20,\"ENS\":20,\"EY\":20,\"FA\":20,\"BS\":20,\"JA\":20,\"PR\":20,\"INA\":20,\"UL\":20,\"YA\":20,\"NU\":20,\"END\":20,\"UM\":19,\"ADE\":19,\"RC\":19,\"RY\":19,\"AE\":19,\"ASH\":19,\"TRA\":19,\"STO\":19,\"INT\":19,\"IST\":18,\"RR\":18,\"GS\":18,\"OME\":18,\"OBE\":18,\"ORA\":18,\"TEE\":18,\"TOR\":18,\"ILE\":18,\"ARS\":18,\"OUT\":18,\"OLE\":18,\"LES\":18,\"ERO\":18,\"REE\":18,\"ETE\":18,\"ERE\":18,\"ENO\":17,\"NEA\":17,\"IRE\":17,\"LET\":17,\"FE\":17,\"TCH\":17,\"FI\":17,\"OTE\":17,\"MAD\":17,\"LAT\":17,\"AIR\":17,\"ELE\":17,\"SY\":17,\"SEA\":17,\"NTO\":17,\"OSE\":17,\"EF\":17,\"OF\":17,\"ERI\":17,\"IME\":16,\"NOT\":16,\"ADA\":16,\"LIN\":16,\"ASS\":16,\"CAR\":16,\"IER\":16,\"SHO\":16,\"LEA\":16,\"SM\":16,\"NK\":16,\"NER\":16,\"SHE\":16,\"OMA\":16,\"MP\":16,\"ERA\":16,\"EIN\":16,\"YO\":16,\"RSE\":15,\"FOR\":15,\"MAR\":15,\"MU\":15,\"TAR\":15,\"DD\":15,\"UA\":15,\"STR\":15,\"ANO\":15,\"SHA\":15,\"FT\":15,\"EH\":15,\"TAN\":15,\"ETS\":15,\"GI\":15,\"OH\":15,\"AKE\":15,\"ENA\":15,\"BRA\":15,\"MB\":15,\"UB\":15,\"CAL\":15,\"ELI\":15,\"ONA\":15,\"TN\":14,\"HAN\":14,\"ODE\":14,\"DU\":14,\"SCA\":14,\"EAN\":14,\"CHE\":14,\"SES\":14,\"OPE\":14,\"EAD\":14,\"OLI\":14,\"HS\":14,\"ADI\":14,\"ATO\":14,\"PT\":14,\"ION\":14,\"EVE\":14,\"MEN\":14,\"ITA\":14,\"CS\":14,\"ARI\":14,\"RK\":14,\"NTE\":14,\"SW\":14,\"ETT\":14,\"RET\":14,\"BU\":14,\"ANS\":14,\"ELA\":13,\"ACT\":13,\"LAS\":13,\"SER\":13,\"EAL\":13,\"TED\":13,\"EER\":13,\"ROA\":13,\"ATS\":13,\"NY\":13,\"ARM\":13,\"SON\":13,\"BAR\":13,\"ESE\":13,\"EEN\":13,\"Q\":13,\"ISE\":13,\"GL\":13,\"OVE\":13,\"ATI\":13,\"SSE\":13,\"EON\":13,\"ELS\":13,\"SAL\":13,\"FL\":13,\"ARD\":13,\"LIS\":13,\"IVE\":13,\"OTO\":13,\"AMO\":13,\"HON\":13,\"EDE\":13,\"AX\":13,\"BEA\":13,\"DY\":13,\"ORT\":13,\"SPE\":13,\"ITE\":13,\"KO\":13,\"BAN\":13,\"ATH\":13,\"RAI\":12,\"ACE\":12,\"VEN\":12,\"UI\":12,\"RAS\":12,\"AIN\":12,\"RIN\":12,\"DON\":12,\"SAN\":12,\"OLL\":12,\"NON\":12,\"ARC\":12,\"NEW\":12,\"ROS\":12,\"DEA\":12,\"ICE\":12,\"GRE\":12,\"ETA\":12,\"MER\":12,\"INS\":12,\"VO\":12,\"NSE\":12,\"CHI\":12,\"WO\":12,\"CON\":12,\"RON\":12,\"IK\":12,\"BLE\":12,\"CHO\":12,\"TIN\":12,\"AME\":12,\"JO\":12,\"RB\":12,\"REC\":12,\"PU\":11,\"ATA\":11,\"DIA\":11,\"SIN\":11,\"TRE\":11,\"PLA\":11,\"ETO\":11,\"ALO\":11,\"NAT\":11,\"ECO\":11,\"IRA\":11,\"DIN\":11,\"NED\":11,\"ILL\":11,\"LOO\":11,\"LIA\":11,\"IF\":11,\"ACK\":11,\"EDO\":11,\"STS\":11,\"PH\":11,\"TAL\":11,\"IAN\":11,\"TL\":11,\"HAR\":11,\"RG\":11,\"TAC\":11,\"SPA\":11,\"NGE\":11,\"RP\":11,\"ANN\":11,\"CU\":11,\"LED\":11,\"RIT\":11,\"YS\":11,\"TAT\":11,\"EMI\":11,\"NCE\":11,\"ERT\":11,\"USE\":11,\"RIS\":11,\"AIL\":10,\"OX\":10,\"RIP\":10,\"PEN\":10,\"HOR\":10,\"EED\":10,\"ABL\":10,\"ONT\":10,\"RL\":10,\"ELO\":10,\"URE\":10,\"RAL\":10,\"EWE\":10,\"CLA\":10,\"AZ\":10,\"GU\":10,\"UC\":10,\"UNT\":10,\"HES\":10,\"CAP\":10,\"IKE\":10,\"LLO\":10,\"LM\":10,\"MEA\":10,\"STI\":10,\"OIL\":10,\"TTO\":10,\"AMI\":10,\"LLE\":10,\"BAT\":10,\"PIN\":10,\"DL\":10,\"FR\":10,\"RNE\":10,\"ISA\":10,\"ANC\":10,\"LIE\":10,\"ECA\":10,\"XE\":10,\"BER\":10,\"PEE\":10,\"TUR\":10,\"SNE\":10,\"ERR\":10,\"DES\":10,\"SEL\":10,\"NOR\":10,\"URN\":10,\"MAL\":10,\"TEL\":10,\"II\":10,\"OSS\":10,\"EET\":10,\"DOR\":10,\"ADO\":10,\"PER\":9,\"UTS\":9,\"ASI\":9,\"XI\":9,\"JE\":9,\"LEE\":9,\"SET\":9,\"RIE\":9,\"AA\":9,\"OY\":9,\"TOP\":9,\"TW\":9,\"CRE\":9,\"ANK\":9,\"PAN\":9,\"BAL\":9,\"GER\":9,\"MAC\":9,\"KR\":9,\"NIO\":9,\"RIA\":9,\"POS\":9,\"SCO\":9,\"UTE\":9,\"RDE\":9,\"OWE\":9,\"ADS\":9,\"HR\":9,\"OAD\":9,\"NIN\":9,\"NAN\":9,\"TB\":9,\"GH\":9,\"EME\":9,\"CAT\":9,\"EGA\":9,\"LIT\":9,\"HEA\":9,\"ONO\":9,\"DOT\":9,\"ACO\":9,\"LLI\":9,\"URA\":9,\"TAS\":9,\"LON\":9,\"ALT\":9,\"RAC\":9,\"TIE\":9,\"APE\":9,\"KS\":9,\"ATC\":9,\"HAT\":9,\"EGO\":9,\"CAN\":9,\"DEL\":9,\"IRI\":9,\"RAM\":9,\"HAS\":8,\"ONS\":8,\"EDS\":8,\"OON\":8,\"IGH\":8,\"TRU\":8,\"DIE\":8,\"ANG\":8,\"EEL\":8,\"DIT\":8,\"MM\":8,\"NDA\":8,\"MIS\":8,\"NTR\":8,\"WEE\":8,\"AJ\":8,\"OTT\":8,\"DAR\":8,\"REN\":8,\"REM\":8,\"NEE\":8,\"GN\":8,\"EZ\":8,\"LAR\":8,\"HAL\":8,\"ALS\":8,\"MEL\":8,\"TIC\":8,\"EK\":8,\"PP\":8,\"EBA\":8,\"BED\":8,\"OAT\":8,\"ZO\":8,\"ROM\":8,\"WS\":8,\"ODO\":8,\"AO\":8,\"MIL\":8,\"QU\":8,\"MES\":8,\"LLA\":8,\"HY\":8,\"BET\":8,\"ORS\":8,\"TRO\":8,\"BB\":8,\"SLA\":8,\"PRE\":8,\"OOS\":8,\"DRE\":8,\"CHA\":8,\"LF\":8,\"ARN\":8,\"OOK\":8,\"ABO\":8,\"OOT\":8,\"GET\":8,\"PED\":8,\"OOP\":8,\"OOD\":8,\"PIA\":8,\"GEN\":8,\"GT\":8,\"ICA\":8,\"COR\":8,\"NDO\":7,\"IDI\":7,\"MET\":7,\"ODA\":7,\"IND\":7,\"NTS\":7,\"ENN\":7,\"SEE\":7,\"LK\":7,\"DAS\":7,\"BES\":7,\"TIM\":7,\"SR\":7,\"OZ\":7,\"ARK\":7,\"TM\":7,\"SHI\":7,\"MIN\":7,\"WOO\":7,\"DEE\":7,\"BLA\":7,\"KN\":7,\"EPI\":7,\"REP\":7,\"LEI\":7,\"NUT\":7,\"MOO\":7,\"VEL\":7,\"NAC\":7,\"COL\":7,\"AID\":7,\"CRA\":7,\"DAL\":7,\"ICI\":7,\"NTH\":7,\"PON\":7,\"BEL\":7,\"ISI\":7,\"YM\":7,\"KED\":7,\"BRO\":7,\"SAT\":7,\"HT\":7,\"COS\":7,\"GG\":7,\"ASK\":7,\"NAR\":7,\"TP\":7,\"ISH\":7,\"ARL\":7,\"ELT\":7,\"HEM\":7,\"NNO\":7,\"OLA\":7,\"YT\":7,\"NL\":7,\"ARO\":7,\"NIT\":7,\"VAL\":7,\"PET\":7,\"NR\":7,\"NOU\":7,\"RAB\":7,\"NAS\":7,\"LOA\":7,\"ETH\":7,\"EDI\":7,\"RIC\":7,\"OUR\":7,\"ENG\":7,\"ROW\":7,\"APA\":7,\"ACA\":7,\"SOL\":7,\"IEL\":7,\"ROO\":7,\"OAS\":7,\"CES\":7,\"RCH\":7,\"IES\":7,\"TEM\":7,\"RH\":7,\"HOT\":7,\"LIC\":7,\"ENI\":7,\"YD\":7,\"ROT\":7,\"NDS\":7,\"OLT\":7,\"WAY\":7,\"BEE\":7,\"CC\":7,\"SSI\":7,\"PAL\":7,\"ABA\":7,\"CRO\":7,\"HET\":7,\"ONG\":7,\"RAP\":7,\"NOM\":7,\"SLI\":7,\"INO\":7,\"ORD\":7,\"UG\":7,\"STY\":7,\"TLE\":7,\"ADD\":7,\"LN\":7,\"CLE\":7,\"TIO\":6,\"HIP\":6,\"LEO\":6,\"COO\":6,\"EAC\":6,\"LLS\":6,\"ETR\":6,\"ARB\":6,\"ROD\":6,\"BOO\":6,\"SKA\":6,\"WH\":6,\"ACR\":6,\"RSO\":6,\"ONI\":6,\"MIT\":6,\"DIS\":6,\"NEL\":6,\"WAR\":6,\"ELD\":6,\"TTI\":6,\"KAR\":6,\"HOG\":6,\"AMP\":6,\"LIV\":6,\"POL\":6,\"THO\":6,\"DG\":6,\"NAL\":6,\"SWA\":6,\"ABR\":6,\"TIT\":6,\"UTT\":6,\"SKI\":6,\"GEE\":6,\"DLE\":6,\"HOO\":6,\"LOW\":6,\"SAR\":6,\"TOS\":6,\"HEL\":6,\"LAY\":6,\"GAS\":6,\"EIS\":6,\"NAG\":6,\"EEM\":6,\"WIT\":6,\"ILI\":6,\"IAS\":6,\"DED\":6,\"ROC\":6,\"OTS\":6,\"TAI\":6,\"APS\":6,\"LEC\":6,\"ERN\":6,\"LAC\":6,\"BAS\":6,\"SNO\":6,\"BIT\":6,\"CLU\":6,\"YN\":6,\"DRA\":6,\"IRS\":6,\"HIG\":6,\"AWA\":6,\"TOL\":6,\"HIN\":6,\"LER\":6,\"RV\":6,\"SAS\":6,\"NNE\":6,\"HAB\":6,\"OOL\":6,\"XA\":6,\"IMA\":6,\"PIE\":6,\"GAN\":6,\"RAG\":6,\"CAS\":6,\"DAM\":6,\"REI\":6,\"ABE\":6,\"ALD\":6,\"GLE\":6,\"OST\":6,\"RID\":6,\"RIM\":6,\"NIE\":6,\"LAI\":6,\"YES\":6,\"OUS\":6,\"SIS\":6,\"TSO\":6,\"NET\":6,\"ODI\":6,\"GRA\":6,\"PLE\":6,\"COT\":6,\"ICK\":6,\"WAT\":6,\"THA\":6,\"ELM\":6,\"SIA\":6,\"LAL\":6,\"PAT\":6,\"REL\":6,\"INC\":6,\"SIT\":6,\"ECT\":6,\"ZI\":6,\"BON\":6,\"OTA\":6,\"TIS\":6,\"NOL\":6,\"EDA\":6,\"INN\":5,\"JP\":5,\"ATR\":5,\"ROB\":5,\"KIE\":5,\"SLO\":5,\"NDE\":5,\"CEN\":5,\"LAD\":5,\"CID\":5,\"HOL\":5,\"EMO\":5,\"GRI\":5,\"ARP\":5,\"BY\":5,\"USA\":5,\"SMO\":5,\"AFT\":5,\"LEY\":5,\"MT\":5,\"NIA\":5,\"OLO\":5,\"CIS\":5,\"NGS\":5,\"ROL\":5,\"CER\":5,\"NF\":5,\"KES\":5,\"DAN\":5,\"OIR\":5,\"MD\":5,\"CRI\":5,\"AKA\":5,\"SOM\":5,\"YL\":5,\"LIO\":5,\"SSN\":5,\"KEE\":5,\"IVA\":5,\"SNA\":5,\"EWA\":5,\"NH\":5,\"LOV\":5,\"NOO\":5,\"BOT\":5,\"LDA\":5,\"SED\":5,\"UAL\":5,\"IPE\":5,\"EES\":5,\"DIO\":5,\"BUS\":5,\"COD\":5,\"AGR\":5,\"TTY\":5,\"SMA\":5,\"AVA\":5,\"FRA\":5,\"RAV\":5,\"ML\":5,\"ETU\":5,\"WR\":5,\"SEC\":5,\"REG\":5,\"IPS\":5,\"HOM\":5,\"COM\":5,\"ISS\":5,\"TAP\":5,\"CTS\":5,\"SIE\":5,\"PEA\":5,\"ITO\":5,\"CD\":5,\"UH\":5,\"LAM\":5,\"LLY\":5,\"WL\":5,\"IDO\":5,\"LAV\":5,\"CAB\":5,\"OWL\":5,\"AUD\":5,\"SCR\":5,\"OGE\":5,\"EPE\":5,\"HOH\":5,\"HN\":5,\"HAI\":5,\"RGE\":5,\"VAN\":5,\"MAT\":5,\"IAT\":5,\"OSH\":5,\"MY\":5,\"APO\":5,\"ECH\":5,\"OBS\":5,\"NAP\":5,\"HAM\":5,\"WEA\":5,\"KAT\":5,\"LDE\":5,\"NAM\":5,\"UDE\":5,\"AGS\":5,\"UNI\":5,\"AVI\":5,\"JI\":5,\"CEL\":5,\"HEE\":5,\"ACI\":5,\"SOU\":5,\"WEL\":5,\"TET\":5,\"AMS\":5,\"MEO\":5,\"INI\":5,\"KY\":5,\"TOT\":5,\"FS\":5,\"NTA\":5,\"YEN\":5,\"TIR\":5,\"YER\":5,\"ZA\":5,\"ITS\":5,\"EPT\":5,\"OIS\":5,\"WIS\":5,\"YEA\":5,\"PEL\":5,\"LOL\":5,\"RAD\":5,\"ITC\":5,\"OFT\":5,\"NNA\":5,\"KRO\":5,\"CTO\":5,\"MAS\":5,\"HUT\":5,\"HOP\":5,\"CAD\":5,\"MED\":5,\"DEW\":5,\"LOS\":5,\"TD\":5,\"ITH\":5,\"DT\":5,\"ICO\":5,\"SEG\":5,\"RTO\":5,\"ONN\":5,\"ABS\":5,\"DOL\":5,\"GES\":5,\"AER\":5,\"ORC\":5,\"LOT\":5,\"SID\":5,\"LOU\":5,\"OBO\":5,\"DIC\":5,\"ASC\":5,\"YR\":5,\"OAR\":5,\"DM\":5,\"LIM\":5,\"IX\":5,\"YC\":5,\"EBO\":5,\"TZ\":5,\"GOT\":5,\"DP\":5,\"LIB\":5,\"DOO\":5,\"OHO\":5,\"PAS\":5,\"HIR\":4,\"LAU\":4,\"TAG\":4,\"IBA\":4,\"SWE\":4,\"ATN\":4,\"GAR\":4,\"DH\":4,\"TTA\":4,\"OND\":4,\"TSE\":4,\"BUR\":4,\"HL\":4,\"AYE\":4,\"SAM\":4,\"COW\":4,\"OAN\":4,\"POI\":4,\"ERV\":4,\"TAX\":4,\"OBI\":4,\"AYS\":4,\"OPA\":4,\"ADR\":4,\"ARY\":4,\"CED\":4,\"NDI\":4,\"PAP\":4,\"SOD\":4,\"PAI\":4,\"INK\":4,\"OLD\":4,\"NB\":4,\"MUS\":4,\"GTH\":4,\"RTE\":4,\"API\":4,\"CTA\":4,\"LTS\":4,\"MOT\":4,\"ALM\":4,\"OOR\":4,\"NGA\":4,\"SLE\":4,\"AWE\":4,\"NKA\":4,\"EWS\":4,\"YAR\":4,\"KIN\":4,\"SAP\":4,\"HAD\":4,\"TV\":4,\"VIA\":4,\"OKE\":4,\"ESA\":4,\"ORG\":4,\"NEG\":4,\"LTE\":4,\"COP\":4,\"YI\":4,\"GEA\":4,\"REV\":4,\"IET\":4,\"POT\":4,\"UNA\":4,\"POO\":4,\"OCA\":4,\"REH\":4,\"TUD\":4,\"MN\":4,\"ABI\":4,\"TIA\":4,\"OMI\":4,\"RME\":4,\"BC\":4,\"ULN\":4,\"ACC\":4,\"NOW\":4,\"ERP\":4,\"EMA\":4,\"ACS\":4,\"IAM\":4,\"EQU\":4,\"SOR\":4,\"BEY\":4,\"OMS\":4,\"UBE\":4,\"BOA\":4,\"FLE\":4,\"SUE\":4,\"AXI\":4,\"JU\":4,\"OUN\":4,\"NCO\":4,\"IGO\":4,\"REO\":4,\"DAB\":4,\"TOM\":4,\"DGE\":4,\"TOO\":4,\"THS\":4,\"ISP\":4,\"FIN\":4,\"OIN\":4,\"WES\":4,\"MIC\":4,\"ILO\":4,\"PTE\":4,\"OTH\":4,\"EFT\":4,\"DOU\":4,\"PRO\":4,\"FLO\":4,\"ALF\":4,\"MOI\":4,\"BOX\":4,\"ECE\":4,\"ROU\":4,\"OMB\":4,\"DOS\":4,\"AMB\":4,\"SUP\":4,\"LAH\":4,\"BRE\":4,\"EID\":4,\"FU\":4,\"IOU\":4,\"NCI\":4,\"RHO\":4,\"SEP\":4,\"DW\":4,\"TUP\":4,\"ORM\":4,\"TOI\":4,\"YNE\":4,\"KNE\":4,\"TAK\":4,\"KER\":4,\"NAD\":4,\"HEN\":4,\"OGA\":4,\"NGT\":4,\"PUT\":4,\"ODD\":4,\"EDY\":4,\"EPO\":4,\"SAB\":4,\"CTI\":4,\"EGR\":4,\"ISO\":4,\"UDI\":4,\"DC\":4,\"ABB\":4,\"RW\":4,\"OSA\":4,\"DDE\":4,\"ESO\":4,\"EQ\":4,\"EAM\":4,\"RMA\":4,\"ORK\":4,\"URS\":4,\"THI\":4,\"RUP\":4,\"EMS\":4,\"SKE\":4,\"ITT\":4,\"NIS\":4,\"PAD\":4,\"EUP\":4,\"ORI\":4,\"AJA\":4,\"BLO\":4,\"LUS\":4,\"LB\":4,\"WN\":4,\"HOE\":4,\"XT\":4,\"RTS\":4,\"RAW\":4,\"ETC\":4,\"FEL\":4,\"NIL\":4,\"OOM\":4,\"NM\":4,\"EYE\":4,\"EIR\":4,\"HUN\":4,\"OZE\":4,\"ANY\":4,\"RVE\":4,\"NCA\":4,\"ICT\":4,\"ASA\":4,\"EXA\":4,\"IDA\":4,\"IMP\":4,\"ZY\":4,\"TOE\":4,\"ATM\":4,\"AUL\":4,\"PES\":4,\"RST\":4,\"HIS\":4,\"ARR\":4,\"OVA\":4,\"YTO\":4,\"ESH\":4,\"XIL\":4,\"SOB\":4,\"NIM\":4,\"MR\":4,\"UAN\":4,\"STU\":4,\"EPA\":4,\"MAI\":4,\"SPO\":4,\"AHA\":4,\"LC\":4,\"ASP\":4,\"AGI\":4,\"OCO\":4,\"LP\":4,\"RTH\":4,\"ETI\":4,\"IZ\":4,\"OSI\":4,\"TAD\":4,\"WAS\":4,\"IBE\":4,\"AYT\":4,\"LNA\":4,\"LOR\":4,\"ENC\":4,\"KEY\":4,\"UTO\":4,\"EEK\":4,\"UST\":4,\"SD\":4,\"SEX\":4,\"EHR\":3,\"RUB\":3,\"SSU\":3,\"SHU\":3,\"OPL\":3,\"ONC\":3,\"TAM\":3,\"NUI\":3,\"RCA\":3,\"LAZ\":3,\"SLU\":3,\"MNI\":3,\"ILD\":3,\"VES\":3,\"LTA\":3,\"ULU\":3,\"WED\":3,\"DEB\":3,\"WRI\":3,\"PAW\":3,\"APT\":3,\"HIT\":3,\"NIG\":3,\"NRO\":3,\"SIG\":3,\"LIP\":3,\"POP\":3,\"MAM\":3,\"DCA\":3,\"YAK\":3,\"TOG\":3,\"EFO\":3,\"ITI\":3,\"AXE\":3,\"AFL\":3,\"MBA\":3,\"GM\":3,\"SOF\":3,\"TUN\":3,\"SAI\":3,\"PAC\":3,\"GEO\":3,\"NYE\":3,\"NP\":3,\"UBO\":3,\"MOG\":3,\"LAK\":3,\"ESC\":3,\"ULA\":3,\"ISL\":3,\"KU\":3,\"EGG\":3,\"OEN\":3,\"EDW\":3,\"WLS\":3,\"BIS\":3,\"ASU\":3,\"OOZ\":3,\"OPT\":3,\"TEO\":3,\"RAJ\":3,\"KEN\":3,\"SAW\":3,\"GLA\":3,\"WAN\":3,\"KIA\":3,\"LEX\":3,\"NV\":3,\"TID\":3,\"JC\":3,\"PEG\":3,\"WAL\":3,\"OKA\":3,\"HIE\":3,\"DEU\":3,\"XER\":3,\"BAD\":3,\"AUT\":3,\"VIL\":3,\"RZ\":3,\"PHE\":3,\"BAB\":3,\"YED\":3,\"YP\":3,\"RIG\":3,\"SUM\":3,\"SEI\":3,\"QUE\":3,\"GAM\":3,\"LSE\":3,\"EPH\":3,\"OHA\":3,\"MOD\":3,\"DN\":3,\"EXP\":3,\"VAS\":3,\"RAR\":3,\"MOL\":3,\"OCK\":3,\"OCT\":3,\"LDI\":3,\"SSS\":3,\"URD\":3,\"ENR\":3,\"EHA\":3,\"MEE\":3,\"IOT\":3,\"UIT\":3,\"UF\":3,\"TUS\":3,\"OCE\":3,\"TSI\":3,\"ORN\":3,\"UKE\":3,\"DRU\":3,\"GW\":3,\"PIT\":3,\"BIL\":3,\"RCS\":3,\"AUR\":3,\"LOP\":3,\"JAI\":3,\"JET\":3,\"SYN\":3,\"NAV\":3,\"AZE\":3,\"ROP\":3,\"REW\":3,\"FF\":3,\"TEI\":3,\"RPE\":3,\"SAK\":3,\"MIR\":3,\"RTI\":3,\"APP\":3,\"DEF\":3,\"SKY\":3,\"EEP\":3,\"KEG\":3,\"IOR\":3,\"BOR\":3,\"SSA\":3,\"VID\":3,\"SPI\":3,\"CTU\":3,\"UNE\":3,\"ESL\":3,\"POR\":3,\"SYD\":3,\"MEM\":3,\"STP\":3,\"MPE\":3,\"SEU\":3,\"YAN\":3,\"CKE\":3,\"RAF\":3,\"COA\":3,\"MOM\":3,\"OYE\":3,\"EHO\":3,\"LEG\":3,\"RWA\":3,\"TAB\":3,\"SCH\":3,\"SUS\":3,\"UNG\":3,\"NNS\":3,\"DEC\":3,\"QUA\":3,\"KRA\":3,\"DOW\":3,\"DDS\":3,\"FAR\":3,\"ACL\":3,\"PAY\":3,\"TNS\":3,\"MPA\":3,\"EDG\":3,\"RRA\":3,\"DOE\":3,\"XP\":3,\"UMP\":3,\"RUN\":3,\"MC\":3,\"KIR\":3,\"CCE\":3,\"YET\":3,\"PHO\":3,\"SIL\":3,\"TUT\":3,\"PRI\":3,\"IGN\":3,\"UK\":3,\"YRO\":3,\"RSA\":3,\"UNC\":3,\"ROI\":3,\"OCC\":3,\"RUT\":3,\"IZE\":3,\"DOI\":3,\"ADY\":3,\"MIK\":3,\"AGN\":3,\"NEU\":3,\"RUS\":3,\"OTI\":3,\"MAG\":3,\"SB\":3,\"TNA\":3,\"FAI\":3,\"ORO\":3,\"WIL\":3,\"ATY\":3,\"KEL\":3,\"EVA\":3,\"IRK\":3,\"OET\":3,\"LSA\":3,\"HOS\":3,\"NHO\":3,\"AHE\":3,\"UCH\":3,\"TOB\":3,\"NEO\":3,\"HEF\":3,\"SF\":3,\"RUD\":3,\"AKI\":3,\"SHY\":3,\"JOH\":3,\"RLE\":3,\"TYR\":3,\"TF\":3,\"UND\":3,\"REU\":3,\"GON\":3,\"LEF\":3,\"ADC\":3,\"WER\":3,\"DOM\":3,\"UTR\":3,\"DAY\":3,\"ERB\":3,\"JS\":3,\"GAL\":3,\"OOB\":3,\"TG\":3,\"RLY\":3,\"IEU\":3,\"OES\":3,\"UES\":3,\"MEI\":3,\"ITU\":3,\"FAT\":3,\"BAG\":3,\"RGO\":3,\"MON\":3,\"ROV\":3,\"GRO\":3,\"CAK\":3,\"TNO\":3,\"OPI\":3,\"ENL\":3,\"PEC\":3,\"KAN\":3,\"TBE\":3,\"IBI\":3,\"LUM\":3,\"SRA\":3,\"HIL\":3,\"LLF\":3,\"NTY\":3,\"ISM\":3,\"SSO\":3,\"TRY\":3,\"TYE\":3,\"ALY\":3,\"IRT\":3,\"WAD\":3,\"UZ\":3,\"DRO\":3,\"PHA\":3,\"UER\":3,\"SAA\":3,\"IMI\":3,\"NSA\":3,\"ITZ\":3,\"EVI\":3,\"NOI\":3,\"CIA\":3,\"POU\":3,\"DMA\":3,\"EAV\":3,\"LOG\":3,\"SME\":3,\"SAY\":3,\"ESI\":3,\"UIS\":3,\"DIL\":3,\"RKA\":3,\"AYN\":3,\"DID\":3,\"ULT\":3,\"AVO\":3,\"REB\":3,\"MBE\":3,\"VIS\":3,\"LUE\":3,\"RTA\":3,\"EXI\":3,\"UCL\":3,\"INF\":3,\"ARU\":3,\"PIS\":3,\"RAY\":3,\"USH\":3,\"VOC\":3,\"ILT\":3,\"XES\":3,\"VOL\":3,\"SAU\":3,\"HAW\":3,\"WEN\":3,\"AEN\":3,\"BIE\":3,\"CUB\":3,\"EIC\":3,\"HIK\":3,\"RIB\":3,\"NOE\":3,\"ERY\":3,\"SIR\":2,\"IED\":2,\"HEQ\":2,\"NUP\":2,\"CP\":2,\"NW\":2,\"HLE\":2,\"LFA\":2,\"EUS\":2,\"ERC\":2,\"UPO\":2,\"XPO\":2,\"HW\":2,\"NAI\":2,\"TMA\":2,\"IBS\":2,\"LR\":2,\"JPE\":2,\"VAR\":2,\"BSE\":2,\"LDS\":2,\"HST\":2,\"HOV\":2,\"BIB\":2,\"USU\":2,\"OTB\":2,\"LIG\":2,\"SFO\":2,\"JOB\":2,\"TME\":2,\"SQ\":2,\"PUP\":2,\"EKE\":2,\"GUE\":2,\"HUM\":2,\"ODY\":2,\"RII\":2,\"UNB\":2,\"NEI\":2,\"RBA\":2,\"RAK\":2,\"DSA\":2,\"RAE\":2,\"FOL\":2,\"OAK\":2,\"AAC\":2,\"RIL\":2,\"PD\":2,\"RCT\":2,\"STH\":2,\"FIV\":2,\"YDS\":2,\"ERU\":2,\"ZEL\":2,\"EFI\":2,\"MUL\":2,\"GNE\":2,\"HOW\":2,\"ESP\":2,\"NOV\":2,\"AYO\":2,\"DLI\":2,\"DB\":2,\"RAZ\":2,\"FTS\":2,\"BBI\":2,\"STB\":2,\"BEG\":2,\"USS\":2,\"MOS\":2,\"CEP\":2,\"SSR\":2,\"OHN\":2,\"SCI\":2,\"UGE\":2,\"TK\":2,\"NFO\":2,\"NEY\":2,\"CUR\":2,\"CIT\":2,\"ADM\":2,\"FIE\":2,\"DWI\":2,\"RNO\":2,\"HEP\":2,\"EGS\":2,\"PSO\":2,\"USC\":2,\"PRA\":2,\"NAE\":2,\"LUN\":2,\"GTO\":2,\"IFY\":2,\"OJ\":2,\"EDT\":2,\"BLU\":2,\"BOL\":2,\"CAM\":2,\"ARG\":2,\"ZES\":2,\"MDI\":2,\"KYE\":2,\"NRI\":2,\"URO\":2,\"UTH\":2,\"BIG\":2,\"AMM\":2,\"GIG\":2,\"ERD\":2,\"MUT\":2,\"EAK\":2,\"HUE\":2,\"SIV\":2,\"NOS\":2,\"BUT\":2,\"MRI\":2,\"OWB\":2,\"MOE\":2,\"TMS\":2,\"BT\":2,\"HD\":2,\"XO\":2,\"JIB\":2,\"IAR\":2,\"LNO\":2,\"EGE\":2,\"TIP\":2,\"UNL\":2,\"EBI\":2,\"UNS\":2,\"YOK\":2,\"KOR\":2,\"ORW\":2,\"NKE\":2,\"OTP\":2,\"MUR\":2,\"GOD\":2,\"ZEN\":2,\"NMO\":2,\"OKU\":2,\"EMM\":2,\"VIR\":2,\"XON\":2,\"TIL\":2,\"GAU\":2,\"ASO\":2,\"RVA\":2,\"GEI\":2,\"RPI\":2,\"CUT\":2,\"SYL\":2,\"DOC\":2,\"LGE\":2,\"CAC\":2,\"NNI\":2,\"ELK\":2,\"RIO\":2,\"KUM\":2,\"LEL\":2,\"IGE\":2,\"CAE\":2,\"AHU\":2,\"MTA\":2,\"TOA\":2,\"NSU\":2,\"SHR\":2,\"JAN\":2,\"ELR\":2,\"XAC\":2,\"LAB\":2,\"EHI\":2,\"OAF\":2,\"LOE\":2,\"FIR\":2,\"FER\":2,\"STL\":2,\"TOD\":2,\"EOR\":2,\"GOK\":2,\"PEO\":2,\"BOB\":2,\"DOV\":2,\"MAJ\":2,\"ROY\":2,\"NTI\":2,\"KAG\":2,\"GAT\":2,\"VAD\":2,\"KAB\":2,\"IRM\":2,\"TCM\":2,\"URG\":2,\"NFR\":2,\"PEK\":2,\"ESY\":2,\"NYM\":2,\"AFI\":2,\"LAG\":2,\"SG\":2,\"TBO\":2,\"PIR\":2,\"UME\":2,\"GLI\":2,\"GOO\":2,\"DPA\":2,\"HYE\":2,\"SAF\":2,\"MDS\":2,\"FAM\":2,\"RBE\":2,\"RRI\":2,\"TTL\":2,\"EAP\":2,\"IDL\":2,\"ZR\":2,\"KET\":2,\"KAY\":2,\"LUT\":2,\"ENJ\":2,\"CLI\":2,\"LIL\":2,\"ERL\":2,\"SAC\":2,\"ESU\":2,\"IBY\":2,\"COB\":2,\"SLY\":2,\"THU\":2,\"RZO\":2,\"LBA\":2,\"HED\":2,\"OPO\":2,\"EAG\":2,\"FAB\":2,\"EIL\":2,\"UHO\":2,\"CKA\":2,\"CAI\":2,\"IAG\":2,\"ERM\":2,\"SPR\":2,\"CM\":2,\"KNI\":2,\"SSY\":2,\"PUR\":2,\"HID\":2,\"ZIO\":2,\"TUE\":2,\"TFO\":2,\"DIR\":2,\"XAM\":2,\"OAC\":2,\"KAM\":2,\"AFA\":2,\"IW\":2,\"ERF\":2,\"GB\":2,\"YSA\":2,\"DAT\":2,\"WY\":2,\"RMS\":2,\"ALP\":2,\"YIP\":2,\"GIN\":2,\"NEC\":2,\"DET\":2,\"EBR\":2,\"GGS\":2,\"FNO\":2,\"AFR\":2,\"ESK\":2,\"OXI\":2,\"TPO\":2,\"DOG\":2,\"RRS\":2,\"ULL\":2,\"LMS\":2,\"SUL\":2,\"BF\":2,\"NYA\":2,\"RUE\":2,\"DSE\":2,\"EMT\":2,\"SST\":2,\"ACU\":2,\"ILK\":2,\"SIM\":2,\"EAB\":2,\"REF\":2,\"IOD\":2,\"ORB\":2,\"PG\":2,\"YNC\":2,\"HC\":2,\"TYL\":2,\"OGS\":2,\"EMU\":2,\"BIN\":2,\"NJO\":2,\"LMA\":2,\"PN\":2,\"MOR\":2,\"AUS\":2,\"OLS\":2,\"BOS\":2,\"EAU\":2,\"MOA\":2,\"OVI\":2,\"NEB\":2,\"YH\":2,\"GIE\":2,\"WIN\":2,\"HRI\":2,\"NLO\":2,\"TDO\":2,\"NNU\":2,\"SOT\":2,\"RIF\":2,\"YOG\":2,\"ZED\":2,\"WAC\":2,\"AUN\":2,\"MIX\":2,\"EUT\":2,\"NIC\":2,\"RHE\":2,\"DAI\":2,\"OHS\":2,\"PM\":2,\"MH\":2,\"OER\":2,\"RRO\":2,\"VAT\":2,\"OGO\":2,\"XEN\":2,\"KOO\":2,\"JES\":2,\"QUI\":2,\"AWN\":2,\"RDO\":2,\"PTS\":2,\"UPI\":2,\"HWA\":2,\"IEV\":2,\"TWE\":2,\"OOF\":2,\"FRE\":2,\"ILA\":2,\"CDR\":2,\"LOI\":2,\"GP\":2,\"OED\":2,\"BEN\":2,\"WB\":2,\"UBA\":2,\"PY\":2,\"LEB\":2,\"ABC\":2,\"OFA\":2,\"NEN\":2,\"NUA\":2,\"MOK\":2,\"EOU\":2,\"TOW\":2,\"NZ\":2,\"SEB\":2,\"RNS\":2,\"MBR\":2,\"RIV\":2,\"ENV\":2,\"FY\":2,\"WOR\":2,\"IEC\":2,\"NDU\":2,\"ATU\":2,\"OPS\":2,\"UAU\":2,\"ORZ\":2,\"OIC\":2,\"UPA\":2,\"REX\":2,\"AHN\":2,\"SUA\":2,\"DIV\":2,\"TTR\":2,\"EOP\":2,\"IPP\":2,\"KAS\":2,\"EWI\":2,\"OCH\":2,\"WAX\":2,\"TEC\":2,\"PAH\":2,\"BOE\":2,\"DDL\":2,\"HEB\":2,\"ARW\":2,\"IFA\":2,\"DUR\":2,\"IH\":2,\"DNE\":2,\"LUA\":2,\"FRO\":2,\"UO\":2,\"NCU\":2,\"MAH\":2,\"EEC\":2,\"LEM\":2,\"LG\":2,\"PPE\":2,\"AIT\":2,\"DUS\":2,\"FOU\":2,\"BIC\":2,\"AIS\":2,\"UTU\":2,\"RUI\":2,\"LOM\":2,\"ONH\":2,\"BSO\":2,\"GAG\":2,\"TOZ\":2,\"SPL\":2,\"NEH\":2,\"HIM\":2,\"LUB\":2,\"EYS\":2,\"UDA\":2,\"YOS\":2,\"GUT\":2,\"IMB\":2,\"SOS\":2,\"UFO\":2,\"AKS\":2,\"SUN\":2,\"CB\":2,\"OSP\":2,\"CEE\":2,\"LOC\":2,\"HEW\":2,\"RSH\":2,\"OID\":2,\"ADL\":2,\"NYH\":2,\"IAC\":2,\"DUO\":2,\"GY\":2,\"HOA\":2,\"WHO\":2,\"PGA\":2,\"WM\":2,\"NEP\":2,\"NOB\":2,\"GWA\":2,\"INR\":2,\"TWI\":2,\"PAU\":2,\"TWO\":2,\"ZZ\":2,\"JJ\":2,\"NEV\":2,\"SIZ\":2,\"KEP\":2,\"VY\":2,\"IEN\":2,\"ILG\":2,\"RF\":2,\"CKO\":2,\"BBA\":2,\"MMI\":2,\"BLI\":2,\"UNO\":2,\"NDD\":2,\"NYO\":2,\"ERG\":2,\"ZET\":2,\"LUD\":2,\"PSA\":2,\"BYA\":2,\"KOP\":2,\"JAR\":2,\"EBE\":2,\"HTS\":2,\"AWS\":2,\"AFE\":2,\"KL\":2,\"IGA\":2,\"COU\":2,\"UIN\":2,\"HIC\":2,\"ODS\":2,\"EMB\":2,\"IRO\":2,\"MIO\":2,\"BRI\":2,\"IJ\":2,\"UTA\":2,\"III\":2,\"DEP\":2,\"RYS\":2,\"CLO\":2,\"JAC\":2,\"MBS\":2,\"NIF\":2,\"ATP\":2,\"OWA\":2,\"ATL\":2,\"ENU\":2,\"MOP\":2,\"EFE\":2,\"AIC\":2,\"YCO\":2,\"RRY\":2,\"TOU\":2,\"ECI\":2,\"ETN\":2,\"LUR\":2,\"YEL\":2,\"RUM\":2,\"AUG\":2,\"DRI\":2,\"RMY\":2,\"NST\":2,\"SPU\":2,\"TSY\":2,\"AYA\":2,\"FST\":2,\"HEI\":2,\"OMP\":2,\"JOY\":2,\"ICS\":2,\"TEV\":2,\"CIL\":2,\"ASW\":2,\"EXT\":2,\"FAL\":2,\"NJ\":2,\"UBS\":2,\"KAH\":2,\"VEG\":2,\"TSH\":2,\"HAV\":2,\"NUM\":2,\"OWN\":2,\"AUC\":2,\"RIK\":2,\"DUP\":2,\"LOB\":2,\"OAM\":2,\"YOU\":2,\"VEH\":2,\"GGI\":2,\"VEC\":2,\"AGO\":2,\"SAG\":2,\"RTL\":2,\"HP\":2,\"DIP\":2,\"USB\":2,\"AZY\":2,\"LTY\":2,\"DRY\":2,\"NUR\":2,\"IAD\":2,\"AOK\":2,\"DEG\":2,\"ISN\":2,\"NQ\":2,\"TAV\":2,\"OGG\":2,\"NAW\":2,\"KEA\":2,\"ABU\":2,\"TYS\":2,\"EHE\":2,\"ZOE\":2,\"ELB\":2,\"YG\":2,\"ONK\":2,\"WHE\":2,\"KEB\":2,\"LTO\":2,\"POM\":2,\"VOI\":2,\"ALK\":2,\"KOS\":2,\"CRU\":2,\"PEP\":2,\"FAC\":2,\"DAP\":2,\"OWS\":2,\"JUA\":2,\"HTH\":2,\"OOO\":2,\"EXE\":2,\"JAP\":2,\"FN\":2,\"VIC\":2,\"FEZ\":1,\"RLO\":1,\"LAO\":1,\"RGY\":1,\"FED\":1,\"ZYM\":1,\"PIP\":1,\"ABH\":1,\"RCE\":1,\"HOD\":1,\"BIF\":1,\"ARH\":1,\"OMC\":1,\"SUR\":1,\"USI\":1,\"BBG\":1,\"DUC\":1,\"TAH\":1,\"ENZ\":1,\"PMO\":1,\"WT\":1,\"LYG\":1,\"GUA\":1,\"DSK\":1,\"SPS\":1,\"TUG\":1,\"MBO\":1,\"BBC\":1,\"MUC\":1,\"ERZ\":1,\"UTZ\":1,\"TKO\":1,\"GMA\":1,\"JPM\":1,\"AZI\":1,\"GNI\":1,\"PAM\":1,\"VC\":1,\"DBL\":1,\"TCE\":1,\"YPO\":1,\"KEZ\":1,\"OJO\":1,\"PJ\":1,\"FLU\":1,\"PB\":1,\"CHS\":1,\"NQU\":1,\"IGU\":1,\"TAU\":1,\"AKR\":1,\"LIF\":1,\"NGW\":1,\"BTE\":1,\"VOD\":1,\"BYT\":1,\"YGR\":1,\"DGI\":1,\"VCR\":1,\"JPA\":1,\"SWI\":1,\"URT\":1,\"EEI\":1,\"ZOI\":1,\"KH\":1,\"YAC\":1,\"ONR\":1,\"MCL\":1,\"SFA\":1,\"NDL\":1,\"YOT\":1,\"NDY\":1,\"TNE\":1,\"VOR\":1,\"TTH\":1,\"XJE\":1,\"CIN\":1,\"ANH\":1,\"LTV\":1,\"JSB\":1,\"LTR\":1,\"CHP\":1,\"GME\":1,\"COI\":1,\"XUA\":1,\"ONW\":1,\"GOS\":1,\"OOX\":1,\"HCL\":1,\"DUB\":1,\"TLC\":1,\"SGS\":1,\"FLY\":1,\"JAM\":1,\"TUI\":1,\"PEZ\":1,\"AKY\":1,\"PLI\":1,\"KTS\":1,\"TDS\":1,\"ELU\":1,\"EGL\":1,\"ITR\":1,\"KLI\":1,\"HB\":1,\"UHH\":1,\"TYA\":1,\"GST\":1,\"LUG\":1,\"WHA\":1,\"BOU\":1,\"GNA\":1,\"KIT\":1,\"PNI\":1,\"RMD\":1,\"SV\":1,\"GHN\":1,\"PUL\":1,\"LOD\":1,\"UNH\":1,\"UMA\":1,\"IFN\":1,\"JOR\":1,\"JAG\":1,\"OFH\":1,\"WIE\":1,\"SDA\":1,\"THL\":1,\"PRY\":1,\"SUI\":1,\"ODL\":1,\"NDW\":1,\"ATD\":1,\"LIK\":1,\"EZR\":1,\"BUE\":1,\"VL\":1,\"OEL\":1,\"GNF\":1,\"AHS\":1,\"KAP\":1,\"POK\":1,\"UMU\":1,\"LAP\":1,\"ANB\":1,\"KAD\":1,\"OHI\":1,\"TWA\":1,\"ZER\":1,\"IML\":1,\"NIR\":1,\"GUP\":1,\"BAI\":1,\"DAH\":1,\"CHY\":1,\"RPR\":1,\"VAM\":1,\"RYE\":1,\"IQS\":1,\"XEL\":1,\"UPY\":1,\"VII\":1,\"VLA\":1,\"UAY\":1,\"NCH\":1,\"NPI\":1,\"OEB\":1,\"GIT\":1,\"EML\":1,\"RCO\":1,\"YMA\":1,\"YBE\":1,\"IOB\":1,\"MTG\":1,\"CEC\":1,\"GIJ\":1,\"VOY\":1,\"CAG\":1,\"EVL\":1,\"MBI\":1,\"NCS\":1,\"NDB\":1,\"VET\":1,\"IJU\":1,\"CSI\":1,\"XIF\":1,\"JBF\":1,\"ELP\":1,\"FTO\":1,\"WBO\":1,\"RMB\":1,\"VEY\":1,\"IRG\":1,\"BFO\":1,\"OSY\":1,\"EOO\":1,\"INU\":1,\"HUC\":1,\"UDO\":1,\"HOK\":1,\"LLU\":1,\"YB\":1,\"HHU\":1,\"HSE\":1,\"RNI\":1,\"ECK\":1,\"MAZ\":1,\"OPR\":1,\"AOH\":1,\"GTI\":1,\"BGU\":1,\"WLI\":1,\"DOP\":1,\"MAK\":1,\"CG\":1,\"TSU\":1,\"HOU\":1,\"AJJ\":1,\"LUL\":1,\"HAJ\":1,\"TOK\":1,\"BDI\":1,\"BAF\":1,\"WIX\":1,\"HOB\":1,\"WVA\":1,\"FAU\":1,\"OGL\":1,\"TOX\":1,\"OFE\":1,\"TTU\":1,\"RDM\":1,\"WHI\":1,\"HMA\":1,\"ALB\":1,\"EKO\":1,\"HOF\":1,\"YEM\":1,\"CUE\":1,\"UMM\":1,\"CDI\":1,\"NPA\":1,\"JAK\":1,\"PTH\":1,\"GIF\":1,\"BEI\":1,\"DWO\":1,\"ETY\":1,\"JJP\":1,\"TAY\":1,\"LSD\":1,\"KSA\":1,\"SSG\":1,\"DME\":1,\"JOJ\":1,\"XTR\":1,\"OJS\":1,\"PIG\":1,\"HFU\":1,\"BSP\":1,\"WAH\":1,\"LAX\":1,\"HYA\":1,\"ONM\":1,\"LRI\":1,\"CCH\":1,\"EZE\":1,\"ORY\":1,\"XTU\":1,\"IEB\":1,\"ADN\":1,\"BAC\":1,\"DLA\":1,\"SOI\":1,\"LPS\":1,\"LYA\":1,\"JOA\":1,\"ZAG\":1,\"SIC\":1,\"AKN\":1,\"RWE\":1,\"APU\":1,\"NIH\":1,\"MLB\":1,\"CCO\":1,\"YHA\":1,\"OUI\":1,\"AXY\":1,\"DSO\":1,\"NKP\":1,\"GUR\":1,\"FOG\":1,\"YMC\":1,\"LRO\":1,\"OUZ\":1,\"JMB\":1,\"LYL\":1,\"CTN\":1,\"SCE\":1,\"MMO\":1,\"ANF\":1,\"FSO\":1,\"ATF\":1,\"NMI\":1,\"DHA\":1,\"OFI\":1,\"GOM\":1,\"ENP\":1,\"NHI\":1,\"ZEK\":1,\"NRA\":1,\"TGE\":1,\"AES\":1,\"YLE\":1,\"FRY\":1,\"AMU\":1,\"ADH\":1,\"PLU\":1,\"EZO\":1,\"MIE\":1,\"CHR\":1,\"GSH\":1,\"PPO\":1,\"MIM\":1,\"NBC\":1,\"EWH\":1,\"IMM\":1,\"JIM\":1,\"MAF\":1,\"VEZ\":1,\"INW\":1,\"SSQ\":1,\"GTS\":1,\"KT\":1,\"GHW\":1,\"FOY\":1,\"WON\":1,\"GSA\":1,\"NBA\":1,\"EPU\":1,\"MHA\":1,\"GUN\":1,\"GEM\":1,\"CIE\":1,\"SHS\":1,\"RRR\":1,\"POX\":1,\"EBY\":1,\"BCS\":1,\"EDL\":1,\"CAF\":1,\"MUN\":1,\"INY\":1,\"OBU\":1,\"UPP\":1,\"AYC\":1,\"SOO\":1,\"BH\":1,\"AWO\":1,\"SIU\":1,\"XF\":1,\"DUD\":1,\"AFB\":1,\"DIY\":1,\"XFO\":1,\"OTF\":1,\"XTI\":1,\"ONQ\":1,\"JEC\":1,\"AAU\":1,\"DTV\":1,\"ESQ\":1,\"GEP\":1,\"MIA\":1,\"TEP\":1,\"LOY\":1,\"UNR\":1,\"DHD\":1,\"IUM\":1,\"QBS\":1,\"EYW\":1,\"BIR\":1,\"UEY\":1,\"IRV\":1,\"GUI\":1,\"ITF\":1,\"EUX\":1,\"YTI\":1,\"ECD\":1,\"BAP\":1,\"UET\":1,\"NEZ\":1,\"OVO\":1,\"TKT\":1,\"SVE\":1,\"MAW\":1,\"LUI\":1,\"NGL\":1,\"YAG\":1,\"GAB\":1,\"GOV\":1,\"PEI\":1,\"XJ\":1,\"LTT\":1,\"NOY\":1,\"TIJ\":1,\"NNY\":1,\"LAE\":1,\"AAW\":1,\"IGS\":1,\"RPO\":1,\"DOF\":1,\"NDT\":1,\"YTE\":1,\"INH\":1,\"IVO\":1,\"IEM\":1,\"URM\":1,\"WYE\":1,\"JM\":1,\"SKO\":1,\"THR\":1,\"VIE\":1,\"PRS\":1,\"MEG\":1,\"HRO\":1,\"OFF\":1,\"SYS\":1,\"FOX\":1,\"UCT\":1,\"ROF\":1,\"PSI\":1,\"HYP\":1,\"NSY\":1,\"AGU\":1,\"SGL\":1,\"BLS\":1,\"NOC\":1,\"DRL\":1,\"CAV\":1,\"HRU\":1,\"KEW\":1,\"MFO\":1,\"QAB\":1,\"GHC\":1,\"JD\":1,\"ASF\":1,\"RKG\":1,\"UTI\":1,\"OYA\":1,\"TNT\":1,\"LKS\":1,\"OMO\":1,\"ANM\":1,\"RUZ\":1,\"FLA\":1,\"SOV\":1,\"MLY\":1,\"SAD\":1,\"IOS\":1,\"RIR\":1,\"WIP\":1,\"UAE\":1,\"ECG\":1,\"IGM\":1,\"DBA\":1,\"BMI\":1,\"OUB\":1,\"LML\":1,\"EDD\":1,\"TVE\":1,\"OUC\":1,\"LKE\":1,\"NYC\":1,\"BEV\":1,\"MYC\":1,\"DTA\":1,\"ABF\":1,\"SKR\":1,\"ONP\":1,\"AQA\":1,\"GOP\":1,\"UTC\":1,\"OMM\":1,\"KSH\":1,\"BM\":1,\"MDO\":1,\"HRS\":1,\"UGG\":1,\"AIM\":1,\"ONV\":1,\"OGI\":1,\"WIC\":1,\"XH\":1,\"RCI\":1,\"LFI\":1,\"EUG\":1,\"FIC\":1,\"HNQ\":1,\"SHW\":1,\"NTB\":1,\"YOW\":1,\"ITM\":1,\"CKS\":1,\"POV\":1,\"ULS\":1,\"UIV\":1,\"ESM\":1,\"YPA\":1,\"PCT\":1,\"CII\":1,\"PDT\":1,\"UNP\":1,\"NRE\":1,\"OWI\":1,\"ONL\":1,\"XIE\":1,\"EEZ\":1,\"AZZ\":1,\"HSP\":1,\"DPL\":1,\"JIL\":1,\"USP\":1,\"EXU\":1,\"LOH\":1,\"UDG\":1,\"ESW\":1,\"ICH\":1,\"MRA\":1,\"IRN\":1,\"LCA\":1,\"KIP\":1,\"UZZ\":1,\"XM\":1,\"TGI\":1,\"TZE\":1,\"HTI\":1,\"AON\":1,\"FEW\":1,\"OUL\":1,\"ZOO\":1,\"ZAN\":1,\"JUM\":1,\"SWO\":1,\"AXO\":1,\"MAB\":1,\"GNC\":1,\"ETW\":1,\"ASL\":1,\"MHO\":1,\"TSP\":1,\"YOB\":1,\"CRS\":1,\"MPO\":1,\"TTS\":1,\"DDU\":1,\"RAO\":1,\"RDA\":1,\"AEC\":1,\"SSW\":1,\"EUM\":1,\"RKR\":1,\"BUN\":1,\"MID\":1,\"RHI\":1,\"WEG\":1,\"EMP\":1,\"FON\":1,\"NAZ\":1,\"PSY\":1,\"JR\":1,\"QB\":1,\"NCL\":1,\"WAK\":1,\"BID\":1,\"HEC\":1,\"STD\":1,\"YYE\":1,\"NVE\":1,\"CY\":1,\"YU\":1,\"OTV\":1,\"MSG\":1,\"MMD\":1,\"WP\":1,\"HAC\":1,\"IXO\":1,\"FEV\":1,\"IBO\":1,\"YLU\":1,\"NOD\":1,\"THP\":1,\"AZR\":1,\"HUG\":1,\"ASY\":1,\"ESD\":1,\"YHO\":1,\"PJS\":1,\"WV\":1,\"TEH\":1,\"APB\":1,\"MRE\":1,\"GPI\":1,\"UMI\":1,\"WAU\":1,\"EBB\":1,\"VU\":1,\"HYD\":1,\"WRY\":1,\"DST\":1,\"GHS\":1,\"SDO\":1,\"WNU\":1,\"IEF\":1,\"FIL\":1,\"NSI\":1,\"VS\":1,\"DUN\":1,\"KSO\":1,\"CHC\":1,\"YON\":1,\"JAH\":1,\"CET\":1,\"TSK\":1,\"FH\":1,\"PC\":1,\"IQ\":1,\"MSL\":1,\"MSE\":1,\"AAB\":1,\"TIZ\":1,\"LIZ\":1,\"CEH\":1,\"SOP\":1,\"OUF\":1,\"LEH\":1,\"WYC\":1,\"AAA\":1,\"WID\":1,\"VSO\":1,\"MBU\":1,\"JUK\":1,\"MIG\":1,\"GBE\":1,\"LIR\":1,\"TYC\":1,\"GGL\":1,\"DAW\":1,\"ISF\":1,\"PPA\":1,\"AHT\":1,\"FEN\":1,\"DJ\":1,\"FUL\":1,\"NDM\":1,\"DDR\":1,\"SYE\":1,\"RPH\":1,\"LDL\":1,\"EAF\":1,\"EXF\":1,\"IMO\":1,\"MEW\":1,\"WAV\":1,\"OOE\":1,\"KJ\":1,\"RPA\":1,\"UCE\":1,\"YAM\":1,\"ONU\":1,\"UEN\":1,\"ASD\":1,\"USM\":1,\"NTT\":1,\"ZRA\":1,\"LKL\":1,\"LYD\":1,\"OIT\":1,\"PIL\":1,\"BEW\":1,\"LSI\":1,\"EGI\":1,\"EGW\":1,\"WEI\":1,\"BBO\":1,\"ZIP\":1,\"TPA\":1,\"UPL\":1,\"SEM\":1,\"RZE\":1,\"TAO\":1,\"LEU\":1,\"DNA\":1,\"TEX\":1,\"UEL\":1,\"OFR\":1,\"DTE\":1,\"ROE\":1,\"RNT\":1,\"MMY\":1,\"PTA\":1,\"QA\":1,\"ODK\":1,\"EHL\":1,\"IHA\":1,\"EUC\":1,\"TOF\":1,\"OAL\":1,\"DHS\":1,\"YIE\":1,\"OLN\":1,\"FIX\":1,\"GHA\":1,\"FK\":1,\"TEW\":1,\"BTW\":1,\"IMS\":1,\"JEU\":1,\"NLC\":1,\"SUB\":1,\"IAL\":1,\"RBI\":1,\"WPS\":1,\"FLI\":1,\"OCD\":1,\"YAB\":1,\"EVY\":1,\"GNO\":1,\"TTN\":1,\"HUL\":1,\"THT\":1,\"FIA\":1,\"YRE\":1,\"UCY\":1,\"NDR\":1,\"PEH\":1,\"HIA\":1,\"EGB\":1,\"OSL\":1,\"NID\":1,\"LCE\":1,\"IGG\":1,\"RDP\":1,\"ORR\":1,\"PPL\":1,\"RYM\":1,\"LSW\":1,\"PTO\":1,\"LFO\":1,\"EYI\":1,\"TGU\":1,\"IDU\":1,\"MOC\":1,\"TPI\":1,\"JAX\":1,\"HOI\":1,\"GAV\":1,\"GOE\":1,\"IDY\":1,\"WSO\":1,\"RYY\":1,\"DSI\":1,\"FTA\":1,\"YW\":1,\"FFA\":1,\"FEI\":1,\"AET\":1,\"CPR\":1,\"NOH\":1,\"XHE\":1,\"IGT\":1,\"ASM\":1,\"GIV\":1,\"NIP\":1,\"XID\":1,\"YCA\":1,\"IFT\":1,\"TUA\":1,\"DHL\":1,\"IHI\":1,\"BOI\":1,\"ENM\":1,\"NIK\":1,\"SRO\":1,\"EUN\":1,\"LEW\":1,\"CPU\":1,\"RLA\":1,\"UNU\":1,\"HEG\":1,\"CHF\":1,\"AQ\":1,\"TSF\":1,\"MBL\":1,\"SCL\":1,\"TST\":1,\"DSU\":1,\"ADP\":1,\"NWA\":1,\"CUP\":1,\"OOI\":1,\"BEH\":1,\"GEY\":1,\"AJE\":1,\"ATB\":1,\"AHL\":1,\"DAV\":1,\"HAK\":1,\"KOF\":1,\"KNO\":1,\"ECL\":1,\"SOA\":1,\"JCT\":1,\"SKS\":1,\"AHI\":1,\"MCA\":1,\"EAW\":1,\"FB\":1,\"WEB\":1,\"YMH\":1,\"GYM\":1,\"KF\":1,\"UHS\":1,\"TII\":1,\"OGR\":1,\"DYM\":1,\"ECS\":1,\"DKA\":1,\"BSA\":1,\"ISK\":1,\"TAA\":1,\"EKS\":1,\"NHA\":1,\"YCH\":1,\"FIG\":1,\"TPE\":1,\"EVO\":1,\"LCS\":1,\"EXG\":1,\"IKA\":1,\"KOL\":1,\"GOG\":1,\"KYA\":1,\"CEO\":1,\"EAH\":1,\"UAM\":1,\"JPU\":1,\"DAC\":1,\"ZIN\":1,\"TNN\":1,\"UNK\":1,\"ZOM\":1,\"PID\":1,\"FOP\":1,\"IWA\":1,\"NSC\":1,\"FIB\":1,\"YME\":1,\"CKY\":1,\"NOA\":1,\"LPG\":1,\"FTL\":1,\"ETZ\":1,\"NGP\":1,\"EJ\":1,\"MUP\":1,\"TBS\":1,\"IY\":1,\"OOC\":1,\"ROG\":1,\"URY\":1,\"VUE\":1,\"KLE\":1,\"HPA\":1,\"ORH\":1,\"DII\":1,\"IPU\":1,\"FJO\":1,\"TSA\":1,\"OCI\":1,\"PTL\":1,\"PPI\":1,\"UEG\":1,\"ORU\":1,\"AHM\":1,\"URU\":1,\"JEW\":1,\"YWE\":1,\"EYB\":1,\"IPO\":1,\"MME\":1,\"IPH\":1,\"ILS\":1,\"OCU\":1,\"EUR\":1,\"OTR\":1,\"PDA\":1,\"YTA\":1,\"ETD\":1,\"UPS\":1,\"CKR\":1,\"SSL\":1,\"EOD\":1,\"MTS\":1,\"BOG\":1,\"GBO\":1,\"EIT\":1,\"WTO\":1,\"KRI\":1,\"ZAP\":1,\"HM\":1,\"CTE\":1,\"OTG\":1,\"SWM\":1,\"GOR\":1,\"GSI\":1,\"RTU\":1,\"DPS\":1,\"ECR\":1,\"RKS\":1,\"YAO\":1,\"WSW\":1,\"NOP\":1,\"ONY\":1,\"HCA\":1,\"XAX\":1,\"YRT\":1,\"ZAH\":1,\"GIS\":1,\"ILC\":1,\"KAL\":1,\"IKS\":1,\"ULY\":1,\"TIV\":1,\"ZON\":1,\"ELN\":1,\"AFS\":1,\"NDG\":1,\"PUD\":1,\"UX\":1,\"JIV\":1,\"PNA\":1,\"QS\":1,\"JK\":1,\"CHU\":1,\"KIM\":1,\"EWT\":1,\"LPA\":1,\"ELF\":1,\"CUL\":1,\"HRA\":1,\"SHT\":1,\"WSP\":1,\"UID\":1,\"KOE\":1,\"ELY\":1,\"LFU\":1,\"CN\":1,\"AZA\":1,\"JCD\":1,\"HSH\":1,\"FHU\":1,\"OGT\":1,\"NMA\":1,\"CBS\":1,\"IPA\":1,\"UZO\":1,\"DIM\":1,\"UTN\":1,\"AFF\":1,\"EEO\":1,\"MPI\":1,\"TAW\":1,\"XU\":1,\"IFF\":1,\"TJO\":1,\"EUE\":1,\"JDS\":1,\"MMA\":1,\"EOI\":1,\"MLK\":1,\"URI\":1,\"GEL\":1,\"NLY\":1,\"EDP\":1,\"MOB\":1,\"GIB\":1,\"FUZ\":1,\"MG\":1,\"RTT\":1,\"IIS\":1,\"UBD\":1,\"AWR\":1,\"OPP\":1,\"IWO\":1,\"EZI\":1,\"UGH\":1,\"KEV\":1,\"PST\":1,\"XPE\":1,\"OUP\":1,\"JAY\":1,\"ALU\":1,\"OMG\":1,\"JB\":1,\"EXJ\":1,\"VEI\":1,\"RBO\":1,\"BFL\":1,\"NKI\":1,\"WAM\":1,\"WET\":1,\"IFE\":1,\"XED\":1,\"UCK\":1,\"CDO\":1,\"OFS\":1,\"NVY\":1,\"RAH\":1,\"RNA\":1,\"YMU\":1,\"OGU\":1,\"CEU\":1,\"OSO\":1,\"PIC\":1,\"ADG\":1,\"PLO\":1,\"TLY\":1,\"EKA\":1,\"IMN\":1,\"STN\":1,\"SQU\":1,\"NKH\":1,\"UMS\":1,\"OXH\":1,\"BG\":1,\"NSK\":1,\"AEG\":1,\"GMC\":1,\"AGL\":1,\"MUD\":1,\"OEY\":1,\"NOF\":1,\"EGU\":1,\"SAV\":1,\"UTJ\":1,\"EDU\":1,\"XY\":1,\"OLC\":1,\"CTY\":1,\"OFN\":1,\"JF\":1,\"EDN\":1,\"CCU\":1,\"TNU\":1,\"LEP\":1,\"IVI\":1,\"GLO\":1,\"YAT\":1,\"NTU\":1,\"DK\":1,\"KUR\":1,\"BYO\":1,\"SEV\":1,\"CAY\":1,\"MAY\":1,\"SKF\":1,\"JFK\":1,\"SNI\":1,\"HNO\":1,\"SRI\":1,\"AUK\":1,\"HAF\":1,\"JOE\":1,\"SSC\":1,\"UED\":1,\"RDS\":1,\"USO\":1,\"PHT\":1,\"NBE\":1,\"EVU\":1,\"IMH\":1,\"AFU\":1,\"EJE\":1,\"INM\":1,\"SIF\":1,\"NTD\":1,\"IAH\":1,\"OUD\":1,\"IJA\":1,\"YOH\":1,\"ROZ\":1,\"ANZ\":1,\"UDM\":1,\"XG\":1,\"YY\":1,\"ISD\":1,\"DIX\":1,\"FOO\":1,\"APL\":1,\"NBU\":1,\"NAY\":1,\"KP\":1,\"LKO\":1,\"HAP\":1,\"FFE\":1,\"MOU\":1,\"RUR\":1,\"YPS\":1,\"KFO\":1,\"ACN\":1,\"CEF\":1,\"EPP\":1,\"YGO\":1,\"HF\":1,\"AAH\":1,\"ATV\":1,\"FUE\":1,\"SDE\":1,\"DMO\":1,\"EUD\":1,\"SAH\":1,\"MYT\":1,\"FAS\":1,\"VAU\":1,\"OMF\":1,\"DOZ\":1,\"BSC\":1,\"NAK\":1,\"RMO\":1,\"ITB\":1,\"SBA\":1,\"MEX\":1,\"ULD\":1,\"OAH\":1,\"GHT\":1,\"PAG\":1,\"ATW\":1,\"BUD\":1,\"AAF\":1,\"HH\":1,\"YIN\":1,\"JAZ\":1,\"GGB\":1,\"APH\":1,\"RTY\":1,\"JKR\":1,\"BEM\":1,\"MF\":1,\"OEI\":1,\"DSH\":1,\"JEB\":1,\"SYP\":1,\"MYR\":1,\"XIS\":1,\"DAE\":1,\"HUS\":1,\"HUH\":1,\"SPH\":1,\"UPN\":1,\"LEV\":1,\"ETM\":1,\"NEF\":1,\"ICU\":1,\"LII\":1,\"SSK\":1,\"OGW\":1,\"ENY\":1,\"KGI\":1,\"YST\":1,\"NPM\":1,\"POE\":1,\"RYT\":1,\"WAG\":1,\"EAZ\":1,\"MOH\":1,\"MLE\":1,\"DYE\":1,\"ULI\":1,\"YEE\":1,\"NZY\":1,\"UNN\":1,\"PYR\":1,\"NWO\":1,\"RGA\":1,\"BD\":1,\"CBE\":1,\"OKR\":1,\"GPA\":1,\"CHT\":1,\"IBR\":1,\"IFI\":1,\"ZIT\":1,\"UDY\":1,\"YAW\":1,\"MLO\":1,\"OMN\":1,\"HOC\":1,\"PPS\":1,\"HDT\":1,\"UBL\":1,\"DPO\":1,\"TDI\":1,\"EXM\":1,\"YUR\":1,\"XGO\":1,\"RMI\":1,\"XME\":1,\"SEH\":1,\"PTI\":1,\"ORV\":1,\"KG\":1,\"AMN\":1,\"IRD\":1,\"CNE\":1,\"NDN\":1,\"BHO\":1,\"COC\":1,\"DEM\":1,\"TWH\":1,\"IRR\":1,\"DWH\":1,\"OKS\":1,\"EPS\":1,\"DGR\":1,\"MAX\":1,\"MSN\":1,\"HIH\":1,\"XR\":1,\"FID\":1,\"FEU\":1,\"DJP\":1,\"HPI\":1,\"GOA\":1,\"GED\":1,\"ADU\":1,\"ZAL\":1,\"ROK\":1,\"SIP\":1,\"KIL\":1,\"NAF\":1,\"AEO\":1,\"LKJ\":1,\"WAW\":1,\"WMD\":1,\"YDR\":1,\"EAI\":1,\"DUM\":1,\"IXT\":1,\"HBE\":1,\"GWO\":1,\"BOY\":1,\"ILN\":1,\"XRA\":1,\"BEF\":1,\"FEM\":1,\"PAX\":1,\"ILY\":1,\"USK\":1,\"RSI\":1,\"YOD\":1,\"BAY\":1,\"KJR\":1,\"WRO\":1,\"ANU\":1,\"CEI\":1,\"ROX\":1,\"ODH\":1,\"LST\":1,\"UAR\":1,\"FOS\":1,\"SAO\":1,\"AWP\":1,\"SUT\":1,\"LOF\":1,\"RFS\":1,\"DCO\":1,\"TJ\":1,\"RFL\":1,\"NDP\":1,\"LYP\":1,\"MEB\":1,\"AHR\":1,\"NEM\":1,\"EOG\":1,\"ZYG\":1,\"DYA\":1,\"TBA\":1,\"AMY\":1,\"EFA\":1,\"HUB\":1,\"CCI\":1,\"FJ\":1,\"DEI\":1,\"HRE\":1,\"IMU\":1,\"GLU\":1,\"DOB\":1,\"JCO\":1,\"IU\":1,\"SOC\":1,\"HTO\":1}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RotateLoader } from 'halogenium';\nimport Content from './Content';\nimport { dbFetchClues, dbQuerySubstring } from '../actions/dbActions';\nimport { removeUnseenEntry, addSeenEntry, removeSeenEntry, addKnownEntry, removeKnownEntry } from '../actions/trainerActions';\nimport { puzzleSetSquare } from '../actions/puzzleActions';\nimport {\n  puzzleSetActiveEntryID,\n  puzzleClearGrid,\n  puzzleSetActiveSquareID,\n  puzzleSetEntry,\n  puzzleSetDimensions,\n  puzzleSetIsGenerating,\n  puzzleSetEntryMaps,\n  puzzleShowEntrySolution,\n  puzzleHideEntrySolution,\n} from '../actions/puzzleActions';\nimport { makeHorizontalSquareMap, makeVerticalSquareMap, randomItem } from '../utils/helpers';\nimport { substringCounts } from '../assets/substrings.js';\n\nclass ContentContainer extends React.Component {\n\n  componentDidMount() {\n    this.props.dbFetchClues().then(() => {\n      this.generateGrid();\n    })\n  }\n\n  revealLetter = () => {\n    const entry = this.props.dbEntries[this.props.activeEntryID];\n    const squareMap = this.props.puzzleEntries[this.props.activeEntryID].squareMap;\n    const randomIndex = Math.floor(Math.random()*squareMap.length);\n    const square = squareMap[randomIndex];\n    this.props.puzzleSetSquare(square, entry.solution[randomIndex]);\n    // TODO: this just randomly picks a square... should pick from the squares without answers given!\n  }\n\n   generateGrid = async() => {\n    // TODO: make more sophisticated... incorporating some seen, etc.\n    let entrySet;\n    if (Math.random() >= 0.5) {\n      entrySet = this.props.unseenEntries.length > 0 ? this.props.unseenEntries : this.props.seenEntries\n      console.log(\"UNSEEN:\" + entrySet.length)\n    } else {\n      entrySet = this.props.seenEntries.length > 0 ? this.props.seenEntries : this.props.unseenEntries\n    }\n    if(entrySet.length) {\n\n      // pick a random entry ID\n      const randomIndex = Math.floor(Math.random()*this.props.unseenEntries.length);\n      const id = this.props.unseenEntries[randomIndex];\n      const entry = this.props.dbEntries[id];\n      // TODO: make this more dynamic\n\n      // get a random letter\n      const randomLetterIndex = Math.floor(Math.random() * entry.solution.length)\n      const randomLetter = entry.solution[randomLetterIndex];\n\n      // get the second entry ID\n      let newID;\n      if(randomLetter in this.props.dbSubEntries) {\n        newID = randomItem(this.props.dbSubEntries[randomLetter])\n      } else {\n        await this.props.dbQuerySubstring(randomLetter);\n        newID = randomItem(this.props.dbSubEntries[randomLetter]);\n      }\n\n      // get the entry from the ID\n      const newEntry = this.props.dbEntries[newID];\n\n      // get height and width\n      const width = entry.solution.length;\n      const height = newEntry.solution.length;\n\n      // get intersection index\n      const secondIntersectIndex = newEntry.solution.indexOf(randomLetter); // this is the ROW that the FIRST clue must go on\n\n      const firstMap = makeHorizontalSquareMap(width, height, entry.solution.length, secondIntersectIndex);\n      const secondMap = makeVerticalSquareMap(width, height, newEntry.solution.length, randomLetterIndex);\n\n      Promise.all([\n        this.props.puzzleSetDimensions(entry.solution.length, newEntry.solution.length),\n        this.props.puzzleSetEntry(id, firstMap, false),\n        this.props.puzzleSetEntry(newID, secondMap, false),\n        this.props.puzzleSetEntryMaps(id, firstMap),\n        this.props.puzzleSetEntryMaps(newID, secondMap),\n        this.props.puzzleSetActiveEntryID(id),\n        this.props.puzzleSetActiveSquareID(firstMap[0])\n      ]).then(() => {\n        this.props.puzzleSetIsGenerating(false);\n      })\n\n      // CONSTRAINT SATISFACTION PROBLEM: BACKTRACKING SEARCH\n      // http://www.aaai.org/Papers/AAAI/1990/AAAI90-032.pdf\n\n\n    } else {\n      console.log(\"Exhausted crossword quota...\");\n    }\n  }\n\n  // clear the old grid and generate a new one\n  nextGrid = () => {\n    this.props.puzzleClearGrid();\n    this.props.removeUnseenEntry(this.props.activeEntryID);\n    this.props.addSeenEntry(this.props.activeEntryID);\n    // returns a Promise, so ensure last dispatch called before generateGrid()\n    this.props.puzzleSetIsGenerating(true).then(() => {\n      this.props.puzzleHideEntrySolution();\n      this.generateGrid();\n    })\n  }\n\n  nextClue = () => {\n    this.props.puzzleSetActiveEntryID(this.props.activeEntryID + 1);\n  }\n\n  render() {\n    return (\n      <div className=\"content-container\">\n        {\n          //TODO: animate this transition\n          this.props.isFetching || this.props.isGenerating ? (\n              <RotateLoader color=\"#007bff\" />\n          ) : (\n              <Content\n                activeEntryID={this.props.activeEntryID}\n                activeSquareID={this.props.activeSquareID}\n                puzzleEntries={this.props.puzzleEntries}\n                dbEntries={this.props.dbEntries}\n                nextGrid={this.nextGrid}\n                puzzleSetActiveSquareID={this.props.puzzleSetActiveSquareID}\n                dimensions={this.props.dimensions}\n                isBlack={this.props.isBlack}\n                squareToEntry={this.props.squareToEntry}\n                puzzleSetActiveEntryID={this.props.puzzleSetActiveEntryID}\n                squares={this.props.squares}\n                puzzleSetEntry={this.props.puzzleSetEntry}\n                puzzleShowEntrySolution={this.props.puzzleShowEntrySolution}\n                puzzleHideEntrySolution={this.props.puzzleHideEntrySolution}\n                solutionIsVisible={this.props.solutionIsVisible}\n                revealLetter={this.revealLetter}\n              />\n          )\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({ db, puzzle, trainer }) => (\n  {\n    isBlack: puzzle.isBlack,\n    puzzleEntries: puzzle.entries,\n    dbEntries: db.entries,\n    activeEntryID: puzzle.activeEntryID,\n    activeSquareID: puzzle.activeSquareID,\n    isFetching: db.isFetching,\n    squareToEntry: puzzle.squareToEntry,\n    squares: puzzle.squares,\n    unseenEntries: trainer.unseenEntries,\n    seenEntries: trainer.seenEntries,\n    dimensions: puzzle.dimensions,\n    isGenerating: puzzle.isGenerating,\n    dbSubEntries: db.subEntries,\n    solutionIsVisible: puzzle.solutionIsVisible,\n  }\n)\n\nconst mapDispatchToProps = (dispatch) => ({\n  dbFetchClues: () => dispatch(dbFetchClues()),\n  puzzleSetActiveEntryID: (id) => {\n    dispatch(puzzleSetActiveEntryID(id))\n    dispatch(puzzleHideEntrySolution())\n  },\n  puzzleClearGrid: () => dispatch(puzzleClearGrid()),\n  puzzleSetActiveSquareID: (id) => dispatch(puzzleSetActiveSquareID(id)),\n  puzzleSetEntry: (entryID, squareMap, correct) => dispatch(puzzleSetEntry(entryID, squareMap, correct)),\n  puzzleSetDimensions: (width, height) => dispatch(puzzleSetDimensions(width, height)),\n  puzzleSetIsGenerating: (isGenerating) => dispatch(puzzleSetIsGenerating(isGenerating)),\n  puzzleSetEntryMaps: (entryID, squareMap) => dispatch(puzzleSetEntryMaps(entryID, squareMap)),\n  removeUnseenEntry: (id) => dispatch(removeUnseenEntry(id)),\n  addSeenEntry: (id) => dispatch(addSeenEntry(id)),\n  removeSeenEntry: (id) => dispatch(removeSeenEntry(id)),\n  addKnownEntry: (id) => dispatch(addKnownEntry(id)),\n  removeKnownEntry: (id) => dispatch(removeKnownEntry(id)),\n  puzzleSetSquare: (squareID, value) => dispatch(puzzleSetSquare(squareID, value.toUpperCase())),\n  dbQuerySubstring: (sub) => dispatch(dbQuerySubstring(sub)),\n  puzzleShowEntrySolution: () => dispatch(puzzleShowEntrySolution()),\n  puzzleHideEntrySolution: () => dispatch(puzzleHideEntrySolution()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentContainer);\n","import React from 'react';\nimport Header from './Header';\nimport ContentContainer from './ContentContainer';\n\nconst Main = () => (\n  <div>\n    <Header />\n    <ContentContainer />\n  </div>\n)\n\nexport default Main;\n","import {\n  PUZZLE_SET_SQUARE,\n  PUZZLE_SET_ACTIVE_ENTRY_ID,\n  PUZZLE_SET_ENTRY,\n  PUZZLE_CLEAR_ENTRIES,\n  PUZZLE_CLEAR_SQUARES,\n  PUZZLE_SET_ACTIVE_SQUARE_ID,\n  PUZZLE_SET_DIMENSIONS,\n  PUZZLE_SET_SQUARE_IS_BLACK,\n  PUZZLE_MAP_SQUARE_TO_ENTRY,\n  PUZZLE_SET_IS_GENERATING,\n  PUZZLE_CLEAR_ENTRY_MAPS,\n  PUZZLE_SHOW_ENTRY_SOLUTION,\n  PUZZLE_HIDE_ENTRY_SOLUTION,\n} from '../actions/actionTypes'\n\nconst initialState = {\n  squares: {},\n  activeEntryID: null,\n  activeSquareID: null,\n  dimensions: {},\n  isBlack: {},\n  squareToEntry: {},\n  entries: {},\n  isGenerating: true,\n  solutionIsVisible: false,\n}\n\n/**\n * Reducer for updating the puzzle state\n * @param {object} state\n * @param {object} action\n */\nconst puzzleReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case PUZZLE_SHOW_ENTRY_SOLUTION: {\n      return ({...state, solutionIsVisible: true})\n    }\n    case PUZZLE_HIDE_ENTRY_SOLUTION: {\n      return ({...state, solutionIsVisible: false})\n    }\n    case PUZZLE_CLEAR_SQUARES: {\n      return ({ ...state, squares: [] })\n    }\n    case PUZZLE_CLEAR_ENTRIES: {\n      return ({ ...state, entries: {} })\n    }\n    case PUZZLE_CLEAR_ENTRY_MAPS: {\n      return ({ ...state, isBlack: {}, squareToEntry: {} })\n    }\n    case PUZZLE_SET_SQUARE: {\n      return ({...state, squares: {...state.squares, [action.id]: action.value}})\n    }\n    case PUZZLE_SET_ACTIVE_ENTRY_ID: {\n      return ({...state, activeEntryID: action.id})\n    }\n    case PUZZLE_SET_ENTRY: {\n      return ({...state, entries: {...state.entries, [action.entryID]:\n        {\n          squareMap: action.squareMap,\n          correct: action.correct,\n        }\n      }})\n    }\n    case PUZZLE_SET_ACTIVE_SQUARE_ID: {\n      return ({...state, activeSquareID: action.id})\n    }\n    case PUZZLE_SET_DIMENSIONS: {\n      return ({...state, dimensions: { width: action.width, height: action.height }})\n    }\n    case PUZZLE_SET_SQUARE_IS_BLACK: {\n      return ({...state, isBlack: {...state.isBlack, [action.id]: action.isBlack }})\n    }\n    case PUZZLE_MAP_SQUARE_TO_ENTRY: {\n      const updatedArray = action.squareID in state.squareToEntry\n        ? [...state.squareToEntry[action.squareID], action.entryID]\n        : [action.entryID];\n      return ({...state, squareToEntry: {...state.squareToEntry, [action.squareID]: updatedArray}})\n    }\n    case PUZZLE_SET_IS_GENERATING: {\n      return ({...state, isGenerating: action.isGenerating})\n    }\n    default:\n      return state;\n  }\n}\n\nexport default puzzleReducer;\n","import { DB_BEGIN_FETCH, DB_FETCH_SUCCESS, DB_FETCH_FAIL, DB_ADD_ENTRY, DB_ADD_SUBSTRING_ENTRY } from '../actions/actionTypes'\n\nconst initialState = {\n  entries: {},\n  isFetching: true,\n  error: null,\n  subEntries: {},\n}\n\n/**\n * Reducer for updating the local database information\n * @param {object} state\n * @param {object} action\n */\nconst dbReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case DB_ADD_ENTRY: {\n      return ({...state, entries: {...state.entries, [action.id]:\n        {\n          clue: action.clue,\n          date: new Date(action.date),\n          dayOfWeek: action.day_of_week,\n          difficulty: action.difficulty,\n          explanation: action.explanation,\n          frequency: action.frequency,\n          length: action.length,\n          puzzleID: action.puzzle_id,\n          solution: action.solution\n        }\n      }})\n    }\n    case DB_BEGIN_FETCH: {\n      return ({...state, isFetching: true})\n    }\n    case DB_FETCH_SUCCESS: {\n      return ({...state, isFetching: false})\n    }\n    case DB_FETCH_FAIL: {\n      return ({...state, isFetching: false, error: action.error})\n    }\n    case DB_ADD_SUBSTRING_ENTRY: {\n      const prev = action.sub in state.subEntries ? [...state.subEntries[action.sub], action.id] : [action.id]\n      return {...state, subEntries: {...state.subEntries, [action.sub]: prev}}\n    }\n    default:\n      return state;\n  }\n}\n\nexport default dbReducer;\n","import {\n  ADD_UNSEEN_ENTRY,\n  REMOVE_UNSEEN_ENTRY,\n  ADD_SEEN_ENTRY,\n  REMOVE_SEEN_ENTRY,\n  ADD_KNOWN_ENTRY,\n  REMOVE_KNOWN_ENTRY\n} from '../actions/actionTypes'\n\nconst initialState = {\n  // TODO: move these to the online db\n  unseenEntries: [],\n  seenEntries: [],\n  knownEntries: [],\n  // TODO: difficulty, num clues, other settings, etc.\n}\n\n/**\n * Reducer for updating the  trainer information\n * @param {object} state\n * @param {object} action\n */\nconst trainerReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case ADD_UNSEEN_ENTRY: {\n      return ({...state, unseenEntries: [...state.unseenEntries, action.id]})\n    }\n    case REMOVE_UNSEEN_ENTRY: {\n      const index = state.unseenEntries.indexOf(action.id)\n      if(index > -1) {\n        return ({...state, unseenEntries: state.unseenEntries.filter(item => item !== action.id)})\n      }\n      break;\n    }\n    case ADD_SEEN_ENTRY: {\n      return ({...state, seenEntries: [...state.seenEntries, action.id]})\n    }\n    case REMOVE_SEEN_ENTRY: {\n      const index = state.seenEntries.indexOf(action.id)\n      if(index > -1) {\n        return ({...state, seenEntries: state.seenEntries.filter(item => item !== action.id)})\n      }\n      break;\n    }\n    case ADD_KNOWN_ENTRY: {\n      return ({...state, knownEntries: [...state.knownEntries, action.id]})\n    }\n    case REMOVE_KNOWN_ENTRY: {\n      const index = state.knownEntries.indexOf(action.id)\n      if(index > -1) {\n        return ({...state, knownEntries: state.knownEntries.filter(item => item !== action.id)})\n      }\n      break;\n    }\n    default:\n      return state;\n  }\n}\n\nexport default trainerReducer;\n","import { combineReducers } from 'redux';\nimport puzzleReducer from './puzzleReducer';\nimport dbReducer from './dbReducer';\nimport trainerReducer from './trainerReducer';\n\n// primary root reducer\nconst rootReducer = combineReducers ({\n  puzzle: puzzleReducer,\n  db: dbReducer,\n  trainer: trainerReducer,\n})\n\nexport default rootReducer;\n","import React from 'react';\nimport Main from './Main'\nimport { Provider } from 'react-redux';\nimport configureStore from '../utils/configureStore';\n\nconst store = configureStore()\n\nconst App = () => (\n  <Provider store={store}>\n    <Main />\n  </Provider>\n)\n\nexport default App;\n","\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst configureStore = (initialState) => {\n  const middleware = applyMiddleware(thunk);\n  return createStore(rootReducer, initialState, composeWithDevTools(middleware));\n};\n\nexport default configureStore;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sass/base.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}